:mod:`citam.tests.api.test_local_storage`
=========================================

.. py:module:: citam.tests.api.test_local_storage


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   citam.tests.api.test_local_storage.test_bad_search_path
   citam.tests.api.test_local_storage.test_results_found
   citam.tests.api.test_local_storage.test_no_results_found
   citam.tests.api.test_local_storage.test_list_runs
   citam.tests.api.test_local_storage.test_get_trajectory_file
   citam.tests.api.test_local_storage.test_get_contact_file
   citam.tests.api.test_local_storage.test_get_map_file
   citam.tests.api.test_local_storage.test_get_coordinate_distribution_file
   citam.tests.api.test_local_storage.test_get_manifest
   citam.tests.api.test_local_storage.test_get_policy_file



Attributes
~~~~~~~~~~

.. autoapisummary::

   citam.tests.api.test_local_storage.search_root


.. data:: search_root
   

   

.. function:: test_bad_search_path()

   This test uses a similar mechanism as citam.tests.cli.dash to check when
   a directory with a valid name but does not exist is passed into the
   storage driver, the correct exception is thrown.
















   ..
       !! processed by numpydoc !!


.. function:: test_results_found(monkeypatch)

   This test uses a mocked boto3 session, which stores all arguments passed
   to the :class:`boto3.session.Storage()` constructor, then asserts the
   correct arguments were used
















   ..
       !! processed by numpydoc !!


.. function:: test_no_results_found()


.. function:: test_list_runs()


.. function:: test_get_trajectory_file()


.. function:: test_get_contact_file()


.. function:: test_get_map_file()


.. function:: test_get_coordinate_distribution_file()


.. function:: test_get_manifest()


.. function:: test_get_policy_file()



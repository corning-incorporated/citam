:mod:`citam.tests.cli.test_dash`
================================

.. py:module:: citam.tests.cli.test_dash

.. autoapi-nested-parse::

   Test cases for the ``citam dash`` CLI subcommand

   ..
       !! processed by numpydoc !!



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   citam.tests.cli.test_dash.mocked_dash_server
   citam.tests.cli.test_dash.result_dir
   citam.tests.cli.test_dash.test_results_is_optional_if_env_is_set
   citam.tests.cli.test_dash.test_result_not_set_fails
   citam.tests.cli.test_dash.test_valid_results_option
   citam.tests.cli.test_dash.test_invalid_dir_results_option



.. function:: mocked_dash_server(monkeypatch)

   This prevents the ``citam dash`` command from starting the server
















   ..
       !! processed by numpydoc !!


.. function:: result_dir(tmpdir)

   Generate a result directory and populate it with a manifest
















   ..
       !! processed by numpydoc !!


.. function:: test_results_is_optional_if_env_is_set(monkeypatch, result_dir)


.. function:: test_result_not_set_fails()


.. function:: test_valid_results_option(result_dir)


.. function:: test_invalid_dir_results_option()

   This is to test that when an invalid or non-existent directory is
   specified via the CLI, the correct exception is raised.

   This test was difficult to write, because we need to guarantee that the
   directory specified is valid in the OS running the test, but also doesn't
   exist.  The approach taken here was to create a temporary directory to
   get a valid directory name, and then delete it to ensure the directory
   does not exist.















   ..
       !! processed by numpydoc !!



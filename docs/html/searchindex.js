Search.setIndex({"docnames": ["api_developer_reference", "autoapi/calculator/index", "autoapi/citam/__main__/index", "autoapi/citam/api/index", "autoapi/citam/api/parser/index", "autoapi/citam/api/server/index", "autoapi/citam/api/storage/index", "autoapi/citam/api/storage/local/index", "autoapi/citam/api/storage/s3/index", "autoapi/citam/cli/index", "autoapi/citam/conf/index", "autoapi/citam/engine/constants/index", "autoapi/citam/engine/core/agent/index", "autoapi/citam/engine/core/index", "autoapi/citam/engine/core/simulation/index", "autoapi/citam/engine/facility/index", "autoapi/citam/engine/facility/indoor_facility/index", "autoapi/citam/engine/facility/navbuilder/index", "autoapi/citam/engine/facility/navigation/index", "autoapi/citam/engine/index", "autoapi/citam/engine/io/index", "autoapi/citam/engine/io/input_parser/index", "autoapi/citam/engine/io/serializer/index", "autoapi/citam/engine/io/storage_utils/index", "autoapi/citam/engine/io/visualization/index", "autoapi/citam/engine/main/index", "autoapi/citam/engine/map/door/index", "autoapi/citam/engine/map/floorplan/index", "autoapi/citam/engine/map/geometry/index", "autoapi/citam/engine/map/index", "autoapi/citam/engine/map/ingester/index", "autoapi/citam/engine/map/point/index", "autoapi/citam/engine/map/space/index", "autoapi/citam/engine/map/updater/index", "autoapi/citam/engine/map/utils/index", "autoapi/citam/engine/schedulers/employee_scheduler/index", "autoapi/citam/engine/schedulers/index", "autoapi/citam/engine/schedulers/meetings/index", "autoapi/citam/engine/schedulers/office_schedule/index", "autoapi/citam/engine/schedulers/office_scheduler/index", "autoapi/citam/engine/schedulers/schedule/index", "autoapi/citam/engine/schedulers/scheduler/index", "autoapi/citam/index", "autoapi/close_contacts_calculator/index", "autoapi/contacts/index", "autoapi/index", "cli_commands", "cli_developer_reference", "engine_developer_reference", "facility_data_requirement", "getting_started", "global_configuration", "index", "input_requirements", "outputs_description", "tutorial", "visualize_results"], "filenames": ["api_developer_reference.rst", "autoapi/calculator/index.rst", "autoapi/citam/__main__/index.rst", "autoapi/citam/api/index.rst", "autoapi/citam/api/parser/index.rst", "autoapi/citam/api/server/index.rst", "autoapi/citam/api/storage/index.rst", "autoapi/citam/api/storage/local/index.rst", "autoapi/citam/api/storage/s3/index.rst", "autoapi/citam/cli/index.rst", "autoapi/citam/conf/index.rst", "autoapi/citam/engine/constants/index.rst", "autoapi/citam/engine/core/agent/index.rst", "autoapi/citam/engine/core/index.rst", "autoapi/citam/engine/core/simulation/index.rst", "autoapi/citam/engine/facility/index.rst", "autoapi/citam/engine/facility/indoor_facility/index.rst", "autoapi/citam/engine/facility/navbuilder/index.rst", "autoapi/citam/engine/facility/navigation/index.rst", "autoapi/citam/engine/index.rst", "autoapi/citam/engine/io/index.rst", "autoapi/citam/engine/io/input_parser/index.rst", "autoapi/citam/engine/io/serializer/index.rst", "autoapi/citam/engine/io/storage_utils/index.rst", "autoapi/citam/engine/io/visualization/index.rst", "autoapi/citam/engine/main/index.rst", "autoapi/citam/engine/map/door/index.rst", "autoapi/citam/engine/map/floorplan/index.rst", "autoapi/citam/engine/map/geometry/index.rst", "autoapi/citam/engine/map/index.rst", "autoapi/citam/engine/map/ingester/index.rst", "autoapi/citam/engine/map/point/index.rst", "autoapi/citam/engine/map/space/index.rst", "autoapi/citam/engine/map/updater/index.rst", "autoapi/citam/engine/map/utils/index.rst", "autoapi/citam/engine/schedulers/employee_scheduler/index.rst", "autoapi/citam/engine/schedulers/index.rst", "autoapi/citam/engine/schedulers/meetings/index.rst", "autoapi/citam/engine/schedulers/office_schedule/index.rst", "autoapi/citam/engine/schedulers/office_scheduler/index.rst", "autoapi/citam/engine/schedulers/schedule/index.rst", "autoapi/citam/engine/schedulers/scheduler/index.rst", "autoapi/citam/index.rst", "autoapi/close_contacts_calculator/index.rst", "autoapi/contacts/index.rst", "autoapi/index.rst", "cli_commands.rst", "cli_developer_reference.rst", "engine_developer_reference.rst", "facility_data_requirement.rst", "getting_started.rst", "global_configuration.rst", "index.rst", "input_requirements.rst", "outputs_description.rst", "tutorial.rst", "visualize_results.rst"], "titles": ["API Developer Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">calculator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.__main__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.api</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.api.parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.api.server</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.api.storage</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.api.storage.local</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.api.storage.s3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.cli</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.conf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.constants</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.core.agent</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.core</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.core.simulation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.facility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.facility.indoor_facility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.facility.navbuilder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.facility.navigation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.io.input_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.io.serializer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.io.storage_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.io.visualization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.map.door</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.map.floorplan</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.map.geometry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.map</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.map.ingester</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.map.point</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.map.space</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.map.updater</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.map.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.schedulers.employee_scheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.schedulers.meetings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.schedulers.office_schedule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.schedulers.office_scheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.schedulers.schedule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam.engine.schedulers.scheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">citam</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">close_contacts_calculator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">contacts</span></code>", "API Reference", "CLI Reference", "CLI Developer Reference", "Engine Developer Reference", "Facility Data Requirements", "How it Works", "Global Configuration", "Welcome to CITAM\u2019s documentation", "Simulation Input Requirements", "Output Description", "Tutorial", "Visualize Results"], "terms": {"come": [0, 44, 47, 48, 51, 55], "soon": [0, 47, 48, 51, 55], "facil": [1, 9, 11, 12, 14, 19, 21, 23, 25, 27, 30, 32, 33, 37, 38, 39, 41, 42, 43, 45, 46, 50, 52, 53, 54], "citam": [1, 43, 44, 45, 46, 49, 50, 53, 54, 55, 56], "engin": [1, 6, 8, 9, 42, 43, 44, 45, 53, 55], "indoor_facil": [1, 14, 15, 19, 41, 42, 43, 45], "kwarg": [1, 3, 6, 7, 8, 9, 19, 25, 27], "base": [1, 6, 7, 8, 10, 12, 14, 16, 17, 18, 19, 21, 25, 30, 37, 38, 39, 40, 41, 43, 50, 52, 55], "abc": [1, 6, 40, 41, 43], "helper": [1, 22, 24, 28, 40, 41, 43], "provid": [1, 7, 18, 30, 33, 40, 41, 43, 49, 50, 53, 54, 55, 56], "standard": [1, 40, 41, 43], "wai": [1, 18, 24, 25, 40, 41, 43, 46, 50], "creat": [1, 9, 14, 17, 18, 23, 24, 25, 27, 28, 30, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 49, 50, 53, 55], "an": [1, 9, 12, 14, 16, 17, 19, 21, 24, 25, 27, 28, 32, 33, 34, 39, 40, 41, 43, 44, 46, 49, 50, 53, 55], "us": [1, 3, 4, 5, 8, 9, 14, 16, 17, 18, 23, 24, 25, 26, 27, 28, 32, 33, 34, 38, 39, 40, 41, 43, 46, 49, 50, 53, 54, 55, 56], "inherit": [1, 40, 41, 43], "abstract": [1, 6, 8, 17, 40, 41], "initi": [1, 7, 14, 17, 18, 24, 28, 43, 44, 49], "agent": [1, 13, 14, 16, 18, 19, 21, 24, 25, 27, 37, 38, 39, 42, 43, 44, 45, 50, 53, 54, 55], "ordereddict": [1, 43], "int": [1, 3, 4, 12, 14, 16, 17, 18, 21, 24, 26, 27, 28, 30, 31, 32, 33, 37, 38, 39, 40, 41, 43, 44], "core": [1, 19, 27, 42, 43, 44, 45, 50], "work_directori": [1, 14, 39, 41, 43], "option": [1, 12, 14, 16, 17, 18, 21, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 43, 50, 53, 56], "union": [1, 4, 14, 17, 18, 19, 21, 23, 24, 27, 30, 33, 43, 44], "str": [1, 3, 4, 6, 7, 8, 12, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 30, 31, 32, 33, 37, 38, 43, 44], "byte": [1, 14, 43], "o": [1, 6, 8, 14, 23, 43, 46, 53, 55], "pathlik": [1, 6, 8, 14, 43], "none": [1, 3, 4, 12, 14, 16, 17, 18, 21, 24, 25, 26, 27, 30, 31, 32, 33, 37, 38, 39, 43, 44, 49], "run": [1, 3, 5, 10, 14, 19, 30, 33, 39, 41, 43, 52, 53, 54], "current_step": [1, 43, 44], "list": [1, 4, 6, 7, 8, 14, 16, 17, 18, 21, 24, 25, 27, 28, 30, 33, 34, 37, 38, 39, 43, 44, 50, 53, 54, 55], "final": [1, 43], "python": [3, 9], "backend": 3, "retriev": [3, 4, 5, 25, 50], "model": [3, 5, 12, 14, 19, 21, 49, 50, 55], "result": [3, 5, 6, 7, 8, 14, 46, 50, 52, 53, 55], "start": [3, 4, 17, 18, 21, 28, 32, 34, 37, 38, 39, 44, 46, 49, 53, 54, 55, 56], "server": [3, 42, 45], "local": [3, 5, 6, 42, 45, 50], "m": [3, 49, 55], "product": [3, 28, 34], "gunicorn": [3, 5], "app": 3, "storag": [3, 5, 42, 45], "s3": [3, 6, 42, 45, 53], "parser": [3, 9, 42, 45], "run_serv": 3, "port": [3, 46], "8000": [3, 46], "host": [3, 46], "127": [3, 46], "0": [3, 4, 14, 18, 21, 25, 27, 28, 30, 33, 34, 43, 46, 49, 53, 55], "1": [3, 14, 17, 18, 21, 24, 25, 28, 30, 34, 39, 44, 45, 46, 49, 53, 55, 56], "arg": [3, 9], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 49, 55], "dash": [3, 9, 56], "paramet": [3, 4, 6, 7, 8, 14, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 30, 32, 33, 34, 37, 38, 39, 43, 44, 50, 53, 54, 55], "serv": [3, 46, 49], "from": [3, 8, 12, 14, 16, 17, 18, 21, 22, 27, 28, 30, 32, 33, 38, 39, 43, 44, 46, 50, 53, 54, 55, 56], "hostnam": 3, "directori": [3, 14, 23, 25, 27, 43, 46, 55, 56], "load": [3, 8, 10, 17, 18, 19, 21, 27, 54], "get_trajectories_lin": 4, "sim_id": [4, 6, 7, 8], "floor": [4, 6, 7, 8, 9, 11, 14, 16, 18, 21, 23, 25, 27, 32, 37, 39, 43, 44, 46, 49, 50, 52, 53, 55], "dict": [4, 6, 16, 18, 19, 21, 22, 24, 25, 26, 27, 30, 32, 37, 38, 39, 43, 44], "get_trajectori": 4, "first_timestep": 4, "max_step": 4, "5000": 4, "get": [4, 6, 7, 8, 18, 23, 46, 50, 55], "trajectori": [4, 6, 7, 8, 14, 54, 55, 56], "inform": [4, 18, 21, 23, 44, 49, 53, 54, 55], "simul": [4, 6, 7, 8, 13, 19, 21, 24, 25, 42, 44, 45, 46, 49, 50, 52, 54, 56], "identifi": [4, 6, 7, 8, 16, 18, 25, 33, 34, 44, 49, 53, 55], "number": [4, 6, 7, 8, 12, 16, 17, 18, 21, 24, 28, 30, 32, 37, 39, 43, 44, 50, 53, 54], "return": [4, 5, 6, 7, 8, 12, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 43, 44], "all": [4, 6, 7, 8, 14, 16, 17, 18, 21, 24, 25, 27, 30, 32, 33, 34, 37, 39, 43, 44, 46, 49, 50, 53, 54, 55, 56], "offset": 4, "broken": 4, "down": [4, 18, 49], "step": [4, 12, 14, 44, 50, 54, 55], "get_contact": 4, "contact": [4, 6, 7, 8, 12, 14, 24, 43, 45, 50, 52, 53, 54, 55], "get_coordinate_distribut": 4, "coordin": [4, 6, 7, 8, 17, 18, 24, 26, 27, 28, 30, 32, 34, 43, 44], "distribut": [4, 6, 7, 8, 38], "per": [4, 14, 21, 37, 38, 39, 43, 44, 55], "wsgi": 5, "entrypoint": [5, 9], "The": [5, 9, 12, 14, 16, 17, 18, 21, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 37, 38, 43, 44, 46, 49, 50, 53, 54, 55], "i": [5, 9, 10, 14, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 30, 32, 33, 34, 37, 38, 43, 44, 49, 50, 53, 54, 55, 56], "svg": [5, 9, 14, 17, 21, 24, 25, 27, 30, 33, 34, 43, 46, 50, 52, 54, 55], "map": [5, 6, 7, 8, 14, 16, 17, 18, 19, 24, 37, 38, 42, 43, 45, 46, 50, 54, 55], "relat": [5, 49, 54], "covid": [5, 55], "19": [5, 55], "To": [5, 52, 53, 56], "instead": 5, "set": [5, 10, 18, 27, 30, 32, 38, 42, 53, 55, 56], "environ": [5, 50, 56], "variabl": [5, 56], "use_local_result": 5, "true": [5, 16, 26, 27, 28, 30, 32, 34, 37, 53], "when": [5, 6, 7, 10, 17, 21, 27, 32, 37, 50, 53, 55, 56], "get_wsgi_app": 5, "applic": 5, "thi": [5, 7, 9, 10, 12, 14, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 30, 32, 33, 34, 37, 38, 39, 44, 45, 49, 50, 53, 54, 55], "should": [5, 17, 18, 21, 33, 49, 54, 55, 56], "like": [5, 24, 28, 49, 55], "except": [6, 10, 21, 55], "noresultsfounderror": 6, "oserror": 6, "error": [6, 10, 32], "rais": [6, 10, 14, 16, 17, 18, 19, 21, 25, 27, 38, 39, 43, 44], "were": [6, 21], "found": [6, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 30, 33, 38, 43, 46, 49, 53, 55], "driver": [6, 7], "basestoragedriv": [6, 7, 8], "list_run": [6, 7, 8], "A": [6, 7, 8, 14, 17, 21, 27, 30, 34, 38, 44, 49, 54, 55], "complet": [6, 7, 8, 49, 53, 55], "get_coordinate_distribution_fil": [6, 7, 8], "textio": [6, 14, 43], "file": [6, 7, 8, 9, 14, 17, 18, 19, 21, 24, 25, 27, 30, 33, 39, 43, 44, 46, 49, 50, 53, 54, 55, 56], "get_trajectory_fil": [6, 7, 8], "get_trajectory_file_loc": [6, 7, 8], "get_contact_fil": [6, 7, 8], "get_map_fil": [6, 7, 8], "io": [6, 19, 42, 45], "bytesio": 6, "imag": [6, 7, 8, 49], "given": [6, 7, 8, 14, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 30, 32, 33, 34, 37, 38, 43, 44, 46, 53, 55], "get_manifest_fil": [6, 7, 8], "manifest": [6, 7, 8, 14, 54, 55], "get_heatmap_fil": [6, 7, 8], "heatmap": [6, 7, 8, 43, 54, 55], "get_pair_contact_fil": [6, 7, 8], "pair": [6, 7, 8, 17, 18, 21, 34, 44, 54], "get_statistics_fil": [6, 7, 8], "statist": [6, 7, 8, 14, 43, 44, 50, 54], "get_policy_fil": [6, 7, 8], "get_manifest": 6, "pars": [6, 21, 30], "localstoragedriv": 7, "search_path": 7, "scan": 7, "valid": [7, 17, 18, 19, 21, 27, 30, 34, 38, 50, 55], "json": [7, 17, 18, 19, 21, 22, 25, 26, 27, 53, 54, 55], "search": [7, 52, 56], "root": [7, 24], "run_id": 7, "s3storagedriv": 8, "bucket": [8, 53], "_get_s3_client": 8, "client": 8, "fetch": 8, "ssl": 8, "bool": [8, 12, 16, 17, 18, 24, 26, 27, 28, 30, 32, 34, 37], "whether": [8, 12, 17, 18, 24, 26, 27, 28, 30, 32, 34, 43, 53, 55], "verifi": [8, 16, 17, 18, 21, 28, 32, 33, 34, 43, 50, 55], "certif": 8, "connect": [8, 17, 18, 30, 49], "access_kei": 8, "access": [8, 17, 30, 56], "kei": [8, 17, 21, 24, 28, 39, 43, 44, 49, 54], "secret_kei": 8, "secret": [8, 49, 55], "region_nam": 8, "region": 8, "name": [8, 9, 12, 16, 18, 21, 23, 25, 27, 30, 33, 44, 49, 53, 55], "storage_url": 8, "url": 8, "_get_text_fil": 8, "filenam": [8, 24, 44], "text": [8, 49, 55], "type": [8, 12, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 37, 38, 39, 43, 44, 49], "stringio": 8, "format": [9, 18, 19, 21, 25, 44, 46, 49, 50, 55], "messag": 9, "": [9, 12, 16, 18, 21, 23, 32, 38, 39, 44, 46, 49, 53, 54, 55], "facility_nam": [9, 16, 18, 21, 23, 25, 53, 55], "floor_nam": [9, 16, 23, 25, 27], "svg_path": 9, "path": [9, 14, 17, 18, 19, 21, 23, 24, 25, 26, 27, 30, 32, 33, 34, 44, 46, 49, 53, 55], "main": [9, 19, 42, 45, 52, 55], "get_pars": 9, "argpars": 9, "instanc": [9, 27, 37, 53], "big": [9, 44], "so": [9, 12, 17, 27, 33, 34, 38, 49, 55], "gener": [9, 14, 18, 26, 37, 45, 49, 52, 54], "ha": [9, 12, 17, 21, 27, 30, 39, 44, 49, 53, 54, 55], "been": [9, 17, 53, 55], "split": 9, "multipl": [9, 18, 46, 49], "method": [9, 10, 19, 25, 49], "attempt": [9, 55], "make": [9, 17, 30, 34, 43, 49, 50, 54, 55], "read": [9, 18, 19, 21, 30, 33, 50, 55], "easier": [9, 17], "http": [9, 49, 55], "doc": 9, "org": [9, 49, 55], "dev": 9, "librari": 9, "html": 9, "_add_engine_command": 9, "subpars": 9, "global_arg": 9, "add": [9, 17, 18, 21, 24, 28, 30, 33, 34, 37, 38, 44, 49, 50, 55], "sub": [9, 21, 52, 55], "command": [9, 50, 52, 55], "param": 9, "argumentpars": 9, "attach": 9, "child": 9, "global": [9, 18, 46, 56], "argument": [9, 21, 52, 55], "parent": [9, 56], "spawn": 9, "_add_config_command": 9, "config": 9, "_add_dash_command": 9, "_placeholder_func": 9, "placehold": 9, "subcommand": 9, "which": [9, 17, 18, 21, 27, 28, 30, 32, 33, 34, 38, 44, 49, 53, 54, 55, 56], "ar": [9, 14, 16, 17, 18, 21, 23, 25, 26, 27, 28, 32, 33, 34, 37, 38, 39, 43, 49, 50, 53, 54, 55, 56], "yet": [9, 17], "implement": [9, 14, 18, 37, 50, 54], "overrid": 10, "user": [10, 12, 16, 17, 18, 23, 25, 30, 33, 49, 53, 54, 55], "defin": [10, 17, 18, 21, 28, 34, 37, 38, 49, 53], "configurationerror": 10, "error_list": 10, "configur": [10, 46, 56], "invalid": [10, 17, 19, 21, 25, 30], "required_space_metadata": 11, "id": [11, 14, 16, 17, 18, 21, 26, 27, 32, 37, 39, 43, 44, 49, 53, 54, 55], "build": [11, 17, 21, 25, 30, 32, 37, 38, 39, 40, 49, 50, 55], "unique_nam": [11, 32, 55], "space_funct": [11, 32, 55], "optional_space_metadata": 11, "space_categori": [11, 32], "depart": [11, 32], "capac": [11, 32], "square_footag": [11, 32], "supported_space_funct": 11, "circul": [11, 17, 18, 49, 55], "offic": [11, 16, 21, 32, 38, 39, 49, 50, 53, 55], "lab": [11, 32, 38, 39], "restroom": [11, 32, 38, 39, 49], "men": 11, "women": 11, "cafeteria": [11, 32, 38, 49, 50, 53], "restroom_visit": [11, 53], "visit": [11, 38, 50, 55], "meet": [11, 14, 19, 21, 32, 36, 38, 39, 42, 45, 49, 52, 54, 55], "lab_work": [11, 53], "work": [11, 34, 38, 49, 52, 53, 54, 55], "cafeteria_visit": [11, 53], "office_work": [11, 53], "default_scheduling_rul": [11, 53], "default_meetings_polici": 11, "meeting_buff": [11, 38], "default_meeting_room_capac": 11, "25": [11, 49, 55], "unique_id": 12, "schedul": [12, 14, 19, 21, 42, 45, 52, 54, 55], "base_loc": [12, 16], "group": [12, 16, 21, 30, 39], "repres": [12, 17, 21, 24, 26, 27, 30, 33, 37, 44, 49], "employe": [12, 50, 55], "otherwis": [12, 16, 17, 25, 28, 32, 37, 38, 39], "associ": [12, 30, 38, 44, 49, 53, 55], "itinerari": [12, 14, 38, 53, 55], "thei": [12, 17, 26, 32, 33, 34, 43, 49, 53, 55], "follow": [12, 28, 39, 44, 49, 54, 55], "throughout": [12, 39, 49], "dai": [12, 39], "also": [12, 17, 18, 49, 50, 54, 55], "keep": [12, 17, 18, 44, 50], "track": [12, 17, 44, 50], "had": 12, "far": [12, 30, 33], "move": [12, 14, 18, 21, 27, 53, 55], "one": [12, 14, 16, 17, 18, 19, 21, 24, 25, 28, 30, 32, 33, 34, 38, 39, 43, 46, 49, 50, 53, 54, 55], "forward": 12, "its": [12, 17, 18, 27, 28, 34, 38, 44, 50, 53, 54, 55], "updat": [12, 17, 19, 24, 25, 29, 30, 37, 38, 42, 44, 45, 49, 55], "current": [12, 14, 17, 18, 25, 26, 27, 34, 38, 39, 43, 44, 46, 50], "posit": [12, 14, 17, 18, 24, 27, 38, 43, 44, 52, 54, 55], "onli": [12, 14, 17, 18, 26, 33, 49, 50, 55], "indic": [12, 17, 30, 43, 49], "differ": [12, 17, 18, 34, 38, 49, 50, 53, 55], "locat": [12, 14, 16, 17, 18, 24, 25, 27, 30, 37, 38, 40, 43, 44, 46, 50, 53, 54, 55], "log": [14, 16, 17, 18, 19, 21, 24, 25, 27, 30, 33, 37, 38, 39, 46, 54, 55], "total_timestep": [14, 39, 41], "n_agent": [14, 21, 25, 39, 53, 55], "calcul": [14, 28, 38, 43, 45, 52], "dry_run": 14, "fals": [14, 16, 17, 24, 25, 26, 27, 28, 30, 32, 37], "indoor": [14, 16, 49, 50, 55], "input": [14, 16, 17, 19, 21, 25, 46, 49, 50, 52, 54, 55], "routin": 14, "scheduel": 14, "output": [14, 24, 25, 38, 43, 52, 55], "create_sim_hash": 14, "hash": [14, 26, 32], "polici": [14, 16, 18, 19, 21, 23, 37, 38, 39, 50, 52], "navig": [14, 15, 16, 17, 19, 24, 25, 26, 32, 34, 38, 42, 45, 46, 50, 52], "floorplan": [14, 16, 17, 18, 19, 21, 24, 25, 26, 29, 30, 32, 33, 34, 38, 42, 45, 49, 50, 53, 55], "data": [14, 17, 21, 23, 25, 27, 30, 33, 43, 44, 46, 50, 52, 53, 54, 55], "uniqu": [14, 33, 44, 49, 53, 55], "each": [14, 17, 18, 21, 24, 25, 27, 30, 34, 38, 39, 43, 44, 46, 49, 50, 53, 54, 55], "run_seri": 14, "workdir": [14, 43], "sim_nam": 14, "run_nam": [14, 53, 55], "serial": [14, 19, 20, 26, 27, 42, 45], "e": [14, 18, 24, 28, 33, 44, 50, 54], "runner": 14, "understand": [14, 49, 50], "slow": 14, "becaus": [14, 55], "timestep": [14, 18, 38, 39, 40, 41, 44], "have": [14, 18, 21, 27, 44, 49, 50, 53, 55], "comput": [14, 17, 18, 28, 32, 34, 43, 44, 55], "while": [14, 38, 50], "take": [14, 21, 30, 37, 38, 53, 54, 55], "account": [14, 30, 38, 54], "specif": [14, 37, 44, 49], "layout": [14, 55], "parallel": [14, 17, 28, 34], "version": [14, 50, 54, 55], "block": 14, "desir": [14, 18, 49, 55], "where": [14, 16, 17, 18, 21, 23, 25, 26, 27, 30, 34, 37, 43, 44, 49, 50, 53, 54, 55], "save": [14, 17, 23, 24, 25, 27, 43, 44, 46, 55], "valueerror": [14, 16, 17, 18, 19, 21, 38, 39, 44], "If": [14, 16, 17, 18, 19, 21, 25, 26, 27, 28, 30, 32, 33, 34, 38, 39, 44, 49, 53, 55], "occup": 14, "rate": 14, "between": [14, 17, 18, 21, 28, 30, 34, 37, 38, 43, 44, 49, 53, 54, 55], "run_simulation_and_save_result": 14, "perform": [14, 19, 25, 30, 49, 50], "create_ag": 14, "entranc": [14, 16, 17, 21, 39, 49, 53, 55], "could": [14, 21, 25, 49], "traj_outfil": 14, "ahead": [14, 17], "At": [14, 50], "advanc": 14, "write": [14, 24, 27, 39, 43, 44], "default": [14, 17, 18, 24, 25, 27, 28, 30, 32, 33, 34, 43, 46, 53], "move_ag": [14, 27], "tupl": [14, 16, 17, 18, 21, 24, 26, 27, 28, 30, 32, 33, 34, 38, 39, 43, 44], "iter": [14, 16, 17, 25, 27, 30, 33, 38, 43, 44], "over": [14, 16, 17, 25, 27, 30, 33, 38, 43, 44], "them": [14, 16, 18, 21, 28, 33, 34, 38, 49, 50, 54, 55], "next": [14, 17, 38, 39, 55], "activ": [14, 43, 50], "save_manifest": 14, "dashboard": [14, 46, 50, 54, 56], "show": [14, 24, 27, 54, 55], "top": [14, 17, 18, 44, 55], "level": [14, 17, 32], "save_map": 14, "visual": [14, 17, 19, 20, 25, 42, 45, 49, 50, 52, 54, 55], "separ": [14, 49], "subdirectori": [14, 56], "save_schedul": 14, "navbuild": [15, 19, 42, 45], "traffic_polici": [16, 18, 21, 27, 53], "ani": [16, 17, 18, 19, 21, 24, 26, 27, 30, 32, 33, 37, 38, 44, 50, 55], "manag": [16, 18, 22, 26, 32, 37, 38, 55], "more": [16, 17, 18, 19, 21, 44, 49, 50, 52, 56], "support": [16, 18, 33, 39, 49, 50, 55], "design": [16, 49], "exit": [16, 18, 27, 49], "traffic": [16, 18, 25, 49, 50, 53], "choose_best_entr": 16, "office_floor": [16, 38], "door": [16, 17, 19, 21, 24, 25, 27, 28, 29, 30, 32, 33, 38, 42, 45, 50, 55], "find": [16, 17, 18, 25, 27, 28, 30, 33, 34, 37, 38, 39, 49, 50, 53], "offer": 16, "fastest": 16, "rout": [16, 18, 25, 38, 55], "assign": [16, 17, 21, 25, 39, 49, 53, 54, 55], "index": [16, 17, 18, 21, 27, 30, 37, 44, 52], "space": [16, 17, 18, 19, 21, 26, 27, 29, 30, 33, 34, 37, 39, 42, 43, 45, 46, 50, 53, 54, 55], "best": [16, 30, 49, 50], "validate_entr": 16, "possibl": [16, 18, 38, 46, 49, 50], "inde": [16, 43], "outsid": [16, 17, 49, 55], "face": 16, "present": 16, "navnet": [16, 17, 18, 24, 25, 26, 50, 55], "is_door_in_navnet": 16, "entrance_floor": [16, 38], "entrance_door": [16, 38], "part": [16, 34, 49], "object": [16, 17, 18, 25, 27, 28, 30, 32, 33, 34, 39, 44, 53], "check": [16, 17, 26, 28, 30, 32, 33, 34, 38], "find_floor_by_nam": 16, "correspond": [16, 17, 18, 27, 28, 30, 33, 34, 38, 44, 55], "find_space_by_nam": 16, "fp_index": 16, "enam": 16, "mostli": [16, 18], "contain": [16, 18, 45, 49, 53, 54, 55], "find_possible_entrance_door": 16, "entrance_spac": 16, "belong": [16, 25, 28, 30, 33, 34, 53], "interest": [16, 17, 18, 21, 25, 27, 28, 30, 32, 33, 34, 37, 44, 50, 55], "look": [16, 17, 25, 30, 46, 49, 50, 55], "group_spac": 16, "accord": 16, "function": [16, 17, 32, 54, 55], "find_and_remove_unreachable_room": 16, "remov": [16, 17, 18, 27, 30, 33, 38, 39, 50, 54, 55], "unreach": 16, "ones": [16, 17, 18, 30, 38, 43, 44], "get_entrance_floor_and_space_id": 16, "dictionari": [16, 19, 21, 25, 26, 27, 30, 32, 39, 43, 44, 54], "describ": [16, 18, 39, 49, 50, 53], "inex": 16, "navigationbuild": 17, "add_all_nav_point": 17, "network": [17, 18, 24, 25, 26, 46, 50, 52], "node": [17, 18, 24, 25], "notabl": [17, 18], "xy": [17, 18, 24, 26, 27, 32, 43, 44], "variou": [17, 50], "intersect": [17, 18, 26, 28, 32], "segment": [17, 25, 28, 33, 34, 49, 53], "actual": [17, 50], "handl": [17, 49], "see": [17, 21, 49, 55, 56], "ad": [17, 18, 27, 37, 38, 52, 53], "center": [17, 32, 34], "aisl": [17, 18, 27, 30, 34, 53], "perpendicular": [17, 28], "nav": [17, 25], "acroo": 17, "hasn": 17, "t": [17, 18, 38, 49, 55], "_create_nav_segments_for_door": 17, "_create_nav_segments_for_aisl": 17, "hallwai": [17, 18, 30, 32, 34, 43, 49, 55], "along": [17, 49], "_update_navnet": 17, "point": [17, 18, 19, 24, 26, 27, 28, 29, 32, 33, 34, 42, 45, 49], "seg_spac": 17, "width": [17, 34, 49], "float": [17, 18, 21, 24, 25, 27, 28, 30, 32, 33, 34, 38, 43, 44], "For": [17, 18, 34, 50, 55, 56], "edg": [17, 18, 25], "fall": [17, 27, 28, 30, 32, 34, 43, 55], "extended_summari": [17, 18], "navent": 17, "_aisle_has_nav_seg": 17, "svgpathtool": [17, 21, 24, 26, 27, 28, 30, 32, 33, 34], "line": [17, 24, 27, 28, 30, 32, 33, 34, 50, 54, 55], "alreadi": [17, 25, 34, 46, 53, 55], "2": [17, 18, 24, 28, 30, 34, 38, 44, 49, 50, 53, 55], "wall": [17, 24, 25, 27, 28, 30, 32, 33, 34, 49, 55], "wa": [17, 44, 49], "_find_valid_boundari": 17, "boundari": [17, 18, 27, 32, 33, 34, 49, 55], "two": [17, 18, 24, 28, 32, 34, 39, 44, 49, 53, 55], "create_nav_segment_for_aisl": 17, "segement": 17, "_find_location_of_point": 17, "insid": [17, 27, 32, 55], "_is_point_on_boundari": 17, "exterior": 17, "li": [17, 18, 28], "_add_segments_to_navnet": 17, "success": [17, 25, 55], "consid": [17, 30, 33, 34], "less": [17, 55], "than": [17, 18, 44, 55, 56], "_add_spaces_to_hallway_graph": 17, "graph": [17, 18, 24, 25], "find_door_intersect": 17, "test_lin": [17, 28], "coord": [17, 18, 27], "nearest": [17, 28], "integ": [17, 18, 27, 28, 34], "find_if_valid_nearby_space_exit": 17, "current_point": 17, "direct": [17, 18, 53], "dx": 17, "dy": 17, "exist": [17, 18, 24, 30, 33, 38, 44, 49, 53, 55], "expect": [17, 19, 21, 27, 49], "decid": 17, "continu": 17, "cross": [17, 50], "henc": 17, "mind": 17, "doe": [17, 21, 27, 28, 32, 50, 54, 55], "need": [17, 49, 55], "new_point": 17, "distanc": [17, 18, 28, 30, 33, 34, 43, 50, 53], "x": [17, 18, 24, 27, 28, 30, 31, 34, 43, 54], "y": [17, 18, 24, 27, 28, 30, 31, 34, 43, 54], "clearli": [17, 55], "someth": 17, "wrong": [17, 21], "_update_seg": 17, "new": [17, 18, 23, 24, 27, 28, 30, 33, 34, 38, 44, 55], "_is_crossing_wal": 17, "first_point": 17, "reach": 17, "veri": 17, "first": [17, 18, 24, 28, 34, 43, 44, 55], "_is_heading_outside_facil": 17, "look_ahead_dist": 17, "3": [17, 24, 28, 33, 39, 55], "head": [17, 24], "within": [17, 21, 28, 32, 37, 38, 43, 49, 50, 53, 55], "neg": [17, 18, 49], "multipli": 17, "valu": [17, 18, 19, 21, 25, 26, 28, 31, 34, 37, 43, 44, 53, 55], "_is_crossing_door": 17, "exclud": [17, 49], "accordingli": [17, 30, 33, 34, 38, 55], "note": [17, 18, 26, 32, 33, 34, 38, 44, 49, 53, 54, 55, 56], "time": [17, 18, 21, 24, 37, 38, 39, 44, 46, 50, 54, 55], "_create_segments_for_new_spac": 17, "anoth": [17, 18, 19, 21], "new_spac": 17, "segment_spac": 17, "compute_single_direction_nav_seg": 17, "current_spac": 17, "stop_at_existing_seg": 17, "increment": 17, "stop": 17, "compute_nav_seg": 17, "direction_vector": 17, "complex": 17, "go": [17, 18, 33, 39, 50, 55], "opposit": 17, "usual": 17, "mark": 17, "end": [17, 18, 28, 34, 37, 44, 49, 54], "vector": [17, 28, 43, 49], "process": [17, 21, 25, 30, 33, 46, 49, 50, 53, 55], "went": 17, "_handle_wall_intersect": 17, "path_lin": 17, "half_width": 17, "break": [17, 49], "half": [17, 18], "sanitize_navnet": 17, "sure": [17, 30, 34, 50, 55], "do": [17, 21, 49, 53, 55, 56], "includ": [17, 21, 27, 28, 32, 38, 49, 50, 54, 55, 56], "standalon": [17, 21, 30, 55], "_remove_node_if_invalid": 17, "neighbor": [17, 18], "door_path": [17, 33], "form": [17, 34, 44, 49], "straight": [17, 55], "simplify_navigation_network": 17, "unnecessari": [17, 50, 55], "togeth": [17, 21, 44, 49], "find_and_collapse_parallel_seg": 17, "test": [17, 28, 30, 32], "overlap": [17, 28, 30, 33, 34], "_compute_intersection_and_remove_seg": 17, "seg1": 17, "seg2": 17, "captur": 17, "interset": 17, "second": [17, 18, 28, 34, 43, 44, 53, 55], "_check_for_intersection_with_other_seg": 17, "n_segment": 17, "find_intersections_in_spac": 17, "through": [17, 18, 33, 38, 50, 55], "other": [17, 18, 26, 28, 30, 31, 32, 34, 37, 43, 49, 50, 55], "_remove_intersecting_edg": 17, "coords1": [17, 18], "coords2": [17, 18], "coords3": 17, "coords4": 17, "4": [17, 34, 38, 53, 55], "coordiant": 17, "both": [17, 18, 28, 30, 33], "find_and_add_intersection_node_to_graph": 17, "four": [17, 50], "export_navnet_to_svg": 17, "svg_file": [17, 21, 24, 27, 30, 33], "pathlib": [17, 18, 19, 21, 23, 24, 27, 30, 33], "export": [17, 24, 25, 27, 53, 55], "superimpos": [17, 24, 33], "interpret": [17, 55], "load_nav_paths_from_svg_fil": 17, "tag": [17, 33, 49], "update_network_from_svg_fil": 17, "can": [17, 18, 27, 32, 44, 46, 49, 50, 53, 54, 55, 56], "allow": [17, 18, 49, 50], "edit": [17, 25, 33, 50, 55], "after": [17, 30, 33, 38, 53, 55], "fact": 17, "full": [17, 38, 46], "filenotfounderror": [17, 18, 19, 21, 25, 27, 43], "export_navdata_to_json": 17, "navnet_json_fil": 17, "hallway_graph_json_fil": 17, "later": [17, 25, 37, 55], "load_navdata_from_json_fil": 17, "avoid": 17, "accident": 17, "overwrit": 17, "trafficpattern": 18, "enum": 18, "enumer": 18, "deriv": 18, "oneway_positive_direct": 18, "oneway_negative_direct": 18, "two_wai": 18, "multifloortyp": 18, "hold": [18, 32], "multifloor": 18, "don": [18, 49, 55], "necessarili": 18, "same": [18, 21, 26, 32, 34, 38, 39, 43, 44, 49, 53, 54, 55], "carri": 18, "about": [18, 27, 49, 50, 54, 55], "exampl": [18, 49, 50, 53, 55], "f2r13": 18, "213": 18, "room": [18, 27, 30, 32, 37, 49], "13": [18, 55], "mean": [18, 32], "directli": [18, 32], "stairwai": [18, 49], "term": 18, "multifloor_typ": 18, "load_hallway_graph": 18, "floor_hallway_graph_fil": 18, "networkx": [18, 24, 25], "share": [18, 49], "least": [18, 38, 49], "descript": [18, 21, 27, 28, 34, 39, 43, 49, 52, 55], "nx": [18, 24], "load_floor_oneway_net": 18, "oneway_net_fil": 18, "onewai": [18, 53], "load_floor_navnet": 18, "floor_navnet_fil": 18, "around": [18, 21, 38, 53, 55], "specifi": [18, 21, 38], "get_corresponding_space_by_nam": 18, "ref_spac": 18, "dest_floor": 18, "refer": [18, 27, 28, 32, 34, 44, 49, 52, 53, 55], "typic": [18, 39, 49], "vertic": [18, 32], "g": [18, 24, 28, 33, 44, 49, 50, 54], "would": [18, 26, 32, 34, 49], "exactli": 18, "destin": 18, "problem": 18, "get_corresponding_vertical_spac": 18, "stair": [18, 32, 49], "elev": [18, 32, 49], "unknown": [18, 21], "itself": 18, "add_vertical_edg": 18, "floor_number1": 18, "floor_number2": 18, "successfulli": [18, 37, 50, 54, 55], "add_all_vertical_edges_between_floor": 18, "toconnect": 18, "adjac": 18, "case": [18, 49, 54], "create_multifloor_navnet": 18, "combin": 18, "apply_traffic_polici": 18, "apply_traffic_policy_to_edg": 18, "all_coord": 18, "j": 18, "navnet_typ": 18, "floor_numb": [18, 37, 40, 43, 44], "doesn": [18, 38, 49], "match": [18, 21, 27, 33, 49, 53, 55], "appli": 18, "prescrib": 18, "under": [18, 34, 38, 43, 49, 55], "consider": [18, 34, 38, 43, 49], "overal": [18, 21, 52, 55], "singlefloor": 18, "set_policy_for_aisl": 18, "oneway_net": 18, "pattern": [18, 50], "interst": [18, 34], "is_edge_matching_direct": 18, "ellipsi": [18, 24, 38], "desired_direct": 18, "how": [18, 21, 38, 49, 52, 53, 54, 55, 56], "angl": [18, 34], "alpha": 18, "respect": [18, 28, 34, 39, 53], "axi": 18, "90": 18, "270": 18, "360": 18, "get_rout": 18, "starting_loc": 18, "starting_floor_numb": 18, "destination_floor_numb": 18, "pace": [18, 38], "shortest": 18, "walk": [18, 38, 44], "unit": [18, 28, 38, 44, 53], "sequenc": 18, "get_valid_multifloor_exit_nod": 18, "get_valid_single_floor_exit_nod": 18, "get_best_possible_routes_multifloor": 18, "get_best_possible_routes_same_floor": 18, "current_loc": 18, "remove_unnecessary_coord": 18, "inspect": [18, 50, 55], "intermedi": 18, "collinear": [18, 34], "trim": 18, "unroll_rout": 18, "requir": [18, 19, 21, 50, 52, 55], "pass": [18, 27], "turn": [18, 32], "dist": 18, "input_pars": [19, 20, 42, 45], "storage_util": [19, 20, 42, 45], "geometri": [19, 29, 42, 45], "ingest": [19, 25, 29, 42, 45, 49, 50, 55], "util": [19, 29, 42, 44, 45], "employee_schedul": [19, 36, 42, 45], "office_schedul": [19, 36, 42, 45], "constant": [19, 38, 42, 45, 53], "parse_input_fil": [19, 21], "input_fil": [19, 21, 46], "primari": [19, 21, 49, 50, 54], "unabl": [19, 21, 39], "decod": [19, 21, 22], "missinginputerror": [19, 21], "typeerror": [19, 21], "incorrect": [19, 21], "run_simul": [19, 25], "engine_run": 19, "execut": [19, 25], "cli": [19, 25, 42, 45, 52, 53], "call": [19, 25, 39, 55], "unable_to_read_file_str": 21, "inappropri": 21, "correct": 21, "invalidsvgerror": 21, "_process_row": 21, "header": 21, "row_id": 21, "row": 21, "csv": [21, 25, 30, 33, 39, 44, 46, 49, 50, 53, 54, 55], "miss": [21, 30, 50, 55], "unrecoginz": 21, "taken": 21, "parse_csv_metadata_fil": 21, "csv_file": [21, 30, 33], "metadata": [21, 25, 46, 49, 50, 53, 55], "etc": [21, 24, 49, 50], "column": [21, 44], "entri": 21, "extract_buildings_elem": 21, "contents_elem": 21, "xml": [21, 55], "etre": 21, "elementtre": 21, "element": [21, 24, 27, 30, 33, 49, 53, 55], "extract": [21, 27, 30, 33, 34, 44], "et": 21, "info": [21, 33, 39], "elem": 21, "parse_standalone_svg_floorplan_fil": 21, "class": [21, 25, 49], "_load_buildings_data": 21, "tree": 21, "subel": 21, "_extract_space_metadata": 21, "space_elem": 21, "building_nam": 21, "_extract_spac": 21, "spaces_elem": 21, "_extract_door": 21, "doors_elem": 21, "parse_svg_floorplan_fil": 21, "well": [21, 27, 28, 30, 44, 50, 53], "parse_meetings_policy_fil": 21, "input_dict": 21, "expos": 21, "often": 21, "long": [21, 49, 53, 54], "place": [21, 27, 37, 44, 53, 54], "iif": 21, "parse_scheduling_policy_fil": 21, "encod": [21, 22, 38, 55], "peopl": [21, 44, 50, 53], "revolv": 21, "concept": 21, "purpos": [21, 38, 40, 53], "ti": 21, "categori": 21, "document": [21, 45, 49, 50, 55], "parse_office_assignment_fil": 21, "dic": 21, "check_for_required_valu": 21, "validate_input_valu": 21, "daylength": [21, 37, 53, 55], "buffer": [21, 38], "durat": [21, 38, 40, 44, 50, 53, 54], "simulaiton": 21, "avail": [21, 37, 38, 39, 50, 53], "enter": [21, 49, 53], "validate_shift": 21, "shift": [21, 39, 50, 53, 55], "who": [21, 37, 53, 55], "percent": 21, "validate_traffic_polici": 21, "_serial": 22, "classname_kei": 22, "__class__": 22, "__call__": 22, "class_": 22, "decoder_hook": 22, "d": [22, 28, 49, 55], "encoder_default": 22, "obj": 22, "get_user_cach": 23, "cach": [23, 25, 50], "get_floorplans_directori": 23, "create_floor_datadir": 23, "newli": [23, 38, 55], "get_floor_datadir": 23, "get_facility_datadir": 23, "x_marker": 24, "line_mark": 24, "plus_mark": 24, "export_possible_oneway_aisles_to_svg": 24, "oneway_network": [24, 25], "svgfile": 24, "one_wai": 24, "create_arrow_svg_path": 24, "arrow": 24, "haid": 24, "tail": 24, "color": 24, "stroke": [24, 49], "size": [24, 28, 55], "create_markers_svg_path": 24, "marker_typ": 24, "arbitrari": [24, 28, 49], "marker": 24, "plu": 24, "sign": 24, "export_nav_network_to_svg": 24, "nav_path": 24, "nav_nod": 24, "blue": [24, 49], "export_world_to_svg": 24, "agent_positions_and_contact": 24, "marker_loc": 24, "max_contact": 24, "100": [24, 55], "current_tim": 24, "show_colobar": 24, "viewbox": [24, 49, 55], "snapshot": 24, "maximum": [24, 34, 38, 53], "colorbar": 24, "clock": 24, "add_root_layer_to_svg": 24, "original_svg_filenam": 24, "updated_filenam": 24, "routes_json_fil": 25, "list_facil": 25, "ingest_floorplan": 25, "scale": [25, 27, 30, 38, 53], "12": [25, 28, 53, 55], "output_directori": 25, "force_overwrit": 25, "raw": [25, 46, 54], "draw": [25, 27, 30, 38, 49, 53, 55], "custom": [25, 49, 56], "store": [25, 27, 50], "export_floorplan_to_svg": 25, "outputfil": [25, 46], "floorplan_directori": 25, "notadirectoryerror": [25, 27], "filemotfounderror": 25, "build_navigation_network": 25, "plan": [25, 46, 55], "update_floorplan_from_svg_fil": 25, "show_floorplan": 25, "include_door": [25, 27], "export_navigation_graph_to_svg": 25, "load_floorplan": 25, "user_scal": 25, "request": 25, "By": 25, "compute_occupancy_r": 25, "initialize_oneway_network": 25, "check_and_remove_node_from_oneway_network": 25, "find_and_save_potential_one_way_aisl": 25, "potenti": [25, 37, 49, 53], "space1": 26, "space2": 26, "space1_id": 26, "space2_id": 26, "in_servic": 26, "emergency_onli": 26, "special_access": 26, "emerg": 26, "flag": [26, 27], "properti": [26, 33, 38, 44], "intersect_coord": 26, "midpoint": 26, "mid": 26, "midpoint_coord": 26, "_intersect_coord": 26, "is_intersect_and_midpoint_sam": 26, "__str__": [26, 31, 32, 37, 38], "self": [26, 31, 32, 37], "__eq__": [26, 31, 32, 37], "__hash__": [26, 32], "_as_dict": [26, 27, 32], "kept": 26, "themselv": 26, "minx": 27, "mini": 27, "maxx": 27, "maxi": 27, "special_wal": 27, "assign_doors_on_load": 27, "manipul": [27, 55], "show_summari": 27, "summari": [27, 37, 54], "stat": [27, 44], "match_doors_and_spac": 27, "recreat": [27, 32], "find_space_by_id": 27, "space_id": 27, "place_ag": 27, "po": 27, "remove_ag": 27, "assum": [27, 28, 39, 53, 55], "identify_this_loc": 27, "include_boundari": [27, 32], "definit": [27, 34, 55], "get_room_exit_coord": 27, "room_id": [27, 30], "middl": 27, "export_to_svg": 27, "written": 27, "seper": [27, 30], "svgwrite": 27, "reassign": 27, "appropir": 27, "to_json_fil": 27, "json_fil": 27, "floorplan_from_directori": 27, "updated_floorplan": 27, "addit": [27, 33, 38, 49, 55], "constructor": 27, "being": 27, "import": [27, 44, 50, 55], "cannot": [27, 33, 34], "geometry_and_svg_util": 28, "py": [28, 53], "author": 28, "mardoche": 28, "reveil": 28, "date": 28, "mai": [28, 53, 55], "2020": 28, "on_seg": 28, "p": [28, 46], "q": 28, "r": [28, 46], "three": 28, "pr": 28, "third": 28, "determine_orient": 28, "orient": [28, 33], "order": [28, 49], "triplet": 28, "colinear": 28, "clockwis": 28, "counterclockwis": 28, "do_intersect": 28, "p1": 28, "q1": 28, "p2": 28, "q2": 28, "endpoint": 28, "is_one_segment_within_the_oth": 28, "p1q1": 28, "p2q2": 28, "vice": 28, "versa": 28, "do_lines_intersect_at_endpoint": 28, "calculate_normal_vector_between_wal": 28, "wall1": [28, 34], "wall2": [28, 34], "numpi": [28, 43], "ndarrai": [28, 43], "normal": 28, "np": [28, 43], "calculate_perpendicular_vector": 28, "_compute_key_vector": 28, "w": 28, "join": 28, "calculate_dot_product_and_distance_between_wal": 28, "dot": [28, 34], "calculate_dot_product_between_wal": 28, "nb": 28, "equal": [28, 32], "calculate_distance_between_wal": 28, "yourself": 28, "euclidian": 28, "norm": 28, "calculate_x_and_y_overlap": 28, "6": [28, 38, 43, 53, 55], "10": [28, 30, 49, 53, 55], "resp": 28, "round_coord": 28, "round": 28, "up": [28, 49], "sample_random_points_from_lin": 28, "npoint": 28, "sampl": [28, 38], "n": [28, 55], "random": 28, "create_parallel_lin": 28, "chang": [28, 33, 50, 55], "compute_new_door_lin": 28, "room_wal": [28, 30], "door_siz": 28, "find_door_lin": 28, "cubic_bezi": 28, "cubicbezi": 28, "cubic": [28, 49], "bezier": [28, 30], "most": [28, 49, 53, 55], "analyz": [28, 55], "align_to_refer": 28, "reference_lin": 28, "modifi": [28, 55], "translat": [28, 33], "align": 28, "is_point_on_lin": 28, "p_test": 28, "tol": 28, "001": 28, "toler": 28, "label": [28, 49], "1e": 28, "remove_segment_from_wal": 28, "subtract": 28, "remain": [28, 30], "floorplaningest": 30, "extract_doors_from_fil": 30, "buildings_to_keep": 30, "excluded_build": 30, "create_spaces_from_csv_and_svg_data": 30, "create_spaces_from_svg_data": 30, "validate_build": 30, "we": [30, 49, 50, 55], "read_data_from_svg_fil": 30, "read_data_from_csv_and_svg_fil": 30, "read_input_fil": 30, "find_space_index_for_door": 30, "space_index": 30, "find_closest_wall_and_best_door_lin": 30, "door_lin": 30, "max_dist": [30, 34], "proxim": [30, 44], "max": [30, 34], "beyond": [30, 33, 34], "too": [30, 33], "_find_all_overlapping_wal": 30, "overallp": 30, "build_door_lin": 30, "curv": 30, "acut": 30, "_create_door_object": 30, "space_indic": 30, "_remove_door_from_overlapping_wal": 30, "overlapping_wal": 30, "carv": [30, 33, 55], "out": [30, 33, 55], "process_door": 30, "create_new_door_to_room": 30, "check_for_overlap_with_other_walls_and_add_door_to_wal": 30, "h_wall": 30, "other_wal": 30, "other_space_id": 30, "add_door": 30, "find_and_remove_overlaps_between_wal": 30, "hallway_wal": 30, "fragment": 30, "get_building_wal": 30, "find_valid_walls_and_create_door": 30, "get_floorplan": 30, "find_min_and_max_coordin": 30, "min": [30, 34], "find_invalid_wal": 30, "v": [30, 46, 55], "invalid_hallway_wal": 30, "check_for_overlap_with_other_wal": 30, "wall_index": 30, "complex_coord": 31, "convert_to_cartesian": 31, "convert_to_complex": 31, "area": [32, 39], "real": [32, 49, 50], "life": [32, 49], "compar": [32, 33, 38, 50], "therefor": [32, 49], "caus": [32, 49], "recurs": 32, "oper": [32, 50, 55], "ignor": [32, 49], "must": [32, 38, 49, 50, 53, 55, 56], "represent": [32, 37, 49, 54], "is_point_on_space_wal": 32, "test_point": 32, "is_point_on_space_boundari": 32, "is_point_inside_spac": 32, "infinite_line_intersection_test": 32, "infinit": 32, "count": [32, 38, 44], "intesect": 32, "odd": 32, "get_random_internal_point": 32, "randomli": [32, 37, 38, 39, 53], "select": [32, 37, 39, 53], "is_space_a_hallwai": 32, "is_space_an_offic": 32, "is_space_a_cafeteria": 32, "is_space_a_lab": 32, "is_space_a_meeting_room": 32, "is_space_a_restroom": 32, "is_space_vert": 32, "regular": [32, 55], "get_space_coord": 32, "geometr": [32, 55], "floorplanupdat": 33, "update_from_csv_data": 33, "read_updated_svg_fil": 33, "find_special_wal": 33, "svg_wall_path": 33, "exis": 33, "special": [33, 39, 49, 50], "remove_door_from_spac": 33, "find_doors_to_remov": 33, "update_from_svg_data": 33, "svg_door_path": 33, "find_spaces_for_door": 33, "side": 33, "beziercurv": 33, "either": [33, 34], "overlap_door_with_wal": 33, "new_door": 33, "max_distance_to_wal": 33, "necessari": [33, 50], "perfectli": 33, "process_new_door": 33, "updated_door": 33, "find_spaces_of_point": 33, "alwai": 33, "unless": 33, "find_closest_parallel_wal": 34, "space_boundari": 34, "ref_wal": 34, "some": [34, 49, 50, 55], "closest": 34, "is_wall_valid_for_aisl": 34, "no_repeat": 34, "apart": 34, "find_aisl": 34, "valid_boundari": 34, "is_this_wall_part_of_an_aisl": 34, "get_aisle_center_point_and_width": 34, "is_this_an_aisl": 34, "rather": 34, "weak": 34, "presum": 34, "compute_bounding_box": 34, "bound": 34, "box": [34, 49], "minimum": [34, 53], "generate_closed_path_for_aisl": 34, "close": [34, 44, 53, 55], "do_walls_overlap": 34, "extract_end_point": 34, "check_for_collinear": 34, "measur": 34, "start_tim": [37, 38, 40, 53, 55], "end_tim": [37, 40], "attende": [37, 54], "string": [37, 53, 55], "meetingschedul": 37, "meeting_room": 37, "agent_id": [37, 39, 44], "policy_param": 37, "predefin": 37, "create_new_meet": 37, "_create_meetings_for_room": 37, "_generate_meeting_attendee_list": 37, "slot": 37, "conflict": 37, "nor": [37, 50], "_find_potential_attende": 37, "individu": [37, 50, 54, 55], "pool": 37, "free": [37, 49, 55], "period": 37, "_update_attendee_pool": 37, "ensur": [37, 50], "averag": 37, "exceed": 37, "get_daily_meet": 37, "officeschedul": [38, 39], "exit_tim": 38, "exit_door": 38, "exit_floor": 38, "office_loc": 38, "scheduling_rul": [38, 39], "rule": [38, 49, 53], "build_schedule_item": 38, "next_meeting_start_tim": 38, "scheduleitem": [38, 40], "item": [38, 53], "upcom": 38, "suitabl": 38, "find_next_schedule_item": 38, "happen": [38, 53], "ned": 38, "befor": [38, 43, 50, 55], "find_possible_purpos": 38, "feturn": 38, "get_max_duration_for_purpos": 38, "count_purpose_occurence_in_schedule_item": 38, "mani": [38, 49, 53, 54, 55], "get_valid_purposes_from_possible_purpos": 38, "satisfi": [38, 53], "exisit": 38, "choose_valid_scheduling_purpos": 38, "common": 38, "chosen": [38, 53], "get_pac": 38, "pick": 38, "gaussian": 38, "ft": [38, 53], "sec": 38, "accept": 38, "rang": 38, "update_schedule_item": 38, "new_item": 38, "previou": [38, 44, 49], "merg": 38, "update_itinerari": 38, "schedule_item": 38, "convert": [38, 44, 49], "get_next_posit": 38, "meeting_polici": 39, "entry_exit_window": 39, "300": [39, 53], "preassigned_offic": 39, "spend": 39, "dine": [39, 53], "generate_meet": 39, "assign_offic": 39, "pre": 39, "queue": 39, "appropri": [39, 49], "save_to_fil": [39, 41, 43], "txt": [39, 54, 55], "api": [42, 52], "__main__": [42, 45], "conf": [42, 45], "closecontactscalcul": 43, "contact_dist": [43, 53, 55], "active_ag": 43, "contact_outfil": 43, "identify_xy_proxim": 43, "positions_vector": 43, "pairwis": [43, 44], "arrai": [43, 53], "verify_and_add_contact": 43, "agent1": [43, 44], "agent2": [43, 44], "nearbi": 43, "event": [43, 44, 50, 54], "add_contact_ev": 43, "record": [43, 54], "extract_contact_distribution_per_ag": 43, "total": [43, 44, 54], "create_svg_heatmap": 43, "contacts_per_coord": 43, "floor_directori": 43, "update_data_dictionari": 44, "datadict": 44, "hashabl": 44, "contactev": 44, "everi": [44, 54], "add_contact": 44, "singl": [44, 49], "involv": [44, 50, 55], "save_pairwise_contact": 44, "aggreg": 44, "extract_statist": 44, "get_floor_contact_coord": 44, "took": [44, 54], "agent1_id": 44, "agent2_id": 44, "get_contacts_per_coordin": 44, "save_raw_contact_data": 44, "page": [45, 52, 55, 56], "auto": 45, "close_contacts_calcul": [45, 52], "sphinx": 45, "autoapi": 45, "usag": 46, "h": [46, 55], "choic": 46, "interact": 46, "log_fil": 46, "engine_command": 46, "verbos": [46, 55], "suppli": 46, "increas": 46, "c": 46, "output_dir": 46, "b": 46, "newtork": 46, "ail": 46, "print": 46, "platform": [49, 50, 55], "simplifi": 49, "graphic": 49, "you": [49, 50, 55], "wish": 49, "simpl": [49, 50], "although": 49, "act": 49, "upon": 49, "produc": 49, "onlin": 49, "met": 49, "unnecessarili": 49, "bloat": 49, "issu": [49, 56], "explain": 49, "what": [49, 55], "lightweight": 49, "consist": 49, "recogn": 49, "focu": 49, "strip": 49, "compon": 49, "It": [49, 54], "scenario": 49, "idea": 49, "relai": 49, "clear": 49, "regardless": 49, "leav": 49, "determin": [49, 55], "arriv": 49, "your": [49, 50, 53, 55, 56], "script": 49, "vba": 49, "autodesk": 49, "dwg": 49, "accommod": 49, "futur": [49, 50], "releas": 49, "welcom": 49, "commun": 49, "contribut": 49, "There": [49, 53, 56], "sever": [49, 50], "section": [49, 50, 53], "ancillari": 49, "below": [49, 50, 53, 55], "impact": 49, "accuraci": 49, "howev": [49, 50], "recommend": [49, 50], "here": [49, 53, 54, 55], "breakdown": 49, "view": 49, "perimet": 49, "mymap": 49, "sp": 49, "01": 49, "16325": 49, "9000": 49, "22583": 49, "14101": 49, "xmln": [49, 55], "www": [49, 55], "w3": [49, 55], "2000": [49, 55], "xlink": 49, "1999": [49, 55], "style": 49, "content": [49, 55], "css": 49, "red": 49, "fill": 49, "grei": 49, "opac": 49, "green": 49, "facilitynam": 49, "interconnect": 49, "outlin": 49, "02": [49, 55], "similar": 49, "polylin": 49, "tie": 49, "si_60985": 49, "3359": 49, "88": 49, "2451": 49, "3251": 49, "2343": 49, "25z": 49, "si_61037": 49, "2700": 49, "69": 49, "1699": 49, "2623": 49, "44": 49, "1778": 49, "si_61036": 49, "2777": 49, "94": 49, "si_61034": 49, "3066": 49, "2683": 49, "81": 49, "3000": 49, "97": 49, "2618": 49, "78": 49, "2925": 49, "84": 49, "2693": 49, "2935": 49, "2703": 49, "2937": 49, "53": 49, "2702": 49, "09": 49, "2992": 49, "62": 49, "2757": 49, "19z": 49, "si_61033": 49, "3067": 49, "2832": 49, "41": 49, "3141": 49, "22": [49, 55], "2759": 49, "03": 49, "si_61032": 49, "3211": 49, "2689": 49, "3136": 49, "2613": 49, "03z": 49, "transmiss": [49, 50, 55], "outdoor": 49, "even": 49, "larg": [49, 55, 56], "campu": 49, "entireti": 49, "cours": 49, "across": 49, "flow": 49, "multi": 49, "These": [49, 50, 55], "layer": 49, "shown": [49, 53, 55], "abov": [49, 55], "subsect": 49, "word": 49, "inhabit": 49, "distinct": 49, "embed": 49, "attribut": 49, "laboratori": 49, "human": 49, "chamber": 49, "jungl": 49, "grid": 49, "tf": [49, 55], "b1": 49, "a1w06f": 49, "own": [49, 54], "ideal": 49, "doorwai": 49, "open": [49, 55], "person": 49, "realiz": 49, "autonom": 49, "made": [49, 53], "As": [49, 50, 55], "those": [49, 53, 55], "In": [49, 50, 55], "manual": 49, "fig": [49, 55], "pleas": [49, 50, 54, 55, 56], "origin": 49, "manufactur": [49, 50], "research": 49, "school": [50, 55], "virtual": 50, "movement": 50, "vari": 50, "mitig": [50, 55], "strategi": 50, "limit": 50, "world": 50, "visitor": [50, 55], "altern": [50, 55], "approach": 50, "assess": 50, "implic": 50, "featur": [50, 55], "mimic": 50, "daili": 50, "folder": [50, 55], "git": 50, "repositori": 50, "done": 50, "easi": 50, "automat": [50, 53, 54, 55], "artifact": 50, "deem": 50, "highli": 50, "creation": 50, "happi": [50, 55], "qualiti": 50, "intellig": 50, "know": [50, 55], "everyth": 50, "good": [50, 55], "onc": [50, 55], "characterist": 50, "built": 50, "softwar": 50, "compat": 50, "major": 50, "system": 50, "ship": 50, "web": [50, 55, 56], "github": [50, 55], "tutori": [50, 52], "depth": 50, "guid": 50, "introduct": 52, "explor": 52, "learn": 52, "bare": [52, 54, 55], "essenti": [52, 55], "detail": [52, 54, 55], "modul": 52, "simulation_nam": [53, 55], "aisle213": [53, 55], "3600": 53, "hour": [53, 55], "entrance_tim": [53, 55], "floorplan_scal": [53, 55], "inch": 53, "upload_result": 53, "boolean": 53, "upload": 53, "abl": 53, "s3cmd": 53, "program": 53, "termin": [53, 55], "upload_loc": 53, "address": 53, "citam_results_storag": 53, "No": 53, "meetings_fil": 53, "scheduling_policy_fil": 53, "scheduling_polici": 53, "percent_ag": [53, 55], "segment_id": 53, "close_din": 53, "create_meet": 53, "permit": [53, 55], "office_assignment_fil": 53, "rel": 53, "station": 53, "subsequ": [53, 54, 55], "repeat": [53, 54, 55], "output_fil": 53, "scedul": 53, "choos": 53, "cap": 53, "guarante": 53, "min_dur": 53, "600": 53, "max_dur": 53, "7200": 53, "min_inst": 53, "max_inst": 53, "900": 53, "1200": [53, 55], "8": [53, 55], "10800": 53, "particip": 53, "todo": 53, "simulation_fold": [54, 55], "floor_0": [54, 55], "contact_dist_per_coord": [54, 55], "contact_dist_per_ag": [54, 55], "office_assign": 54, "pair_contact": [54, 55], "raw_contact_data": [54, 55], "ccd": [54, 55], "structur": 54, "preserv": 54, "displai": 54, "gui": [54, 56], "subfold": 54, "occur": 54, "non": 54, "cumul": 54, "notic": [54, 55], "plot": 54, "highlight": 54, "pertain": 54, "entir": 54, "agents_id": 54, "subject": 54, "particularli": 54, "debug": 54, "simplic": 54, "did": 54, "dure": 54, "want": [54, 55], "dive": 54, "deeper": 54, "f": 54, "video": 54, "brief": 55, "assist": 55, "context": 55, "pandem": 55, "help": 55, "decis": 55, "risk": 55, "download": 55, "instal": 55, "properli": 55, "kind": 55, "lead": 55, "awar": 55, "realist": 55, "fashion": 55, "back": 55, "let": 55, "basic": [55, 56], "spatial": 55, "companion": 55, "basic_example_2": 55, "now": 55, "tf2": 55, "viewer": 55, "browser": 55, "editor": 55, "notepad": 55, "30": 55, "utf": 55, "rdf": 55, "syntax": 55, "svg224": 55, "120": 55, "1441": 55, "height": 55, "600px": 55, "def": 55, "defs228": 55, "1152": 55, "l": 55, "96": 55, "z": 55, "48": 55, "192": 55, "5": 55, "288": 55, "7": 55, "384": 55, "9": 55, "480": 55, "11": 55, "576": 55, "1128": 55, "240": 55, "14": 55, "1080": 55, "15": 55, "1032": 55, "16": 55, "17": 55, "18": 55, "144": 55, "familiar": 55, "websit": 55, "discuss": 55, "closer": 55, "tf1": 55, "room_1": 55, "room2": 55, "room_3": 55, "room4": 55, "room_5": 55, "room6": 55, "room_7": 55, "room8": 55, "room_9": 55, "room10": 55, "room_11": 55, "room12": 55, "aisle13": 55, "room14": 55, "room15": 55, "room16": 55, "room17": 55, "room18": 55, "room19": 55, "20": 55, "room20": 55, "21": 55, "room21": 55, "room22": 55, "23": 55, "room23": 55, "24": 55, "aisle24": 55, "room25": 55, "26": 55, "room26": 55, "27": 55, "room27": 55, "28": 55, "room28": 55, "29": 55, "room29": 55, "simpli": 55, "field": 55, "basic_exampl": 55, "progress": 55, "fairli": 55, "expens": 55, "few": 55, "depend": 55, "tf2_ingest": 55, "favorit": 55, "think": 55, "mistakenli": 55, "inkscap": 55, "action": 55, "just": 55, "delet": 55, "shorter": 55, "longer": 55, "keyword": 55, "extend": 55, "cover": 55, "darker": 55, "left": 55, "door_1": 55, "tf2_edit": 55, "again": 55, "tf2_updat": 55, "re": 55, "until": 55, "congratul": 55, "intern": 55, "curiou": 55, "sim_input": 55, "test_sim_2": 55, "run_1": 55, "1800": 55, "occupancy_r": 55, "null": 55, "08333333333": 55, "copi": 55, "past": 55, "sit": 55, "relax": 55, "minut": 55, "employee_id": 55, "ran": 55, "known": 56, "speed": 56, "citam_result_path": 56, "quick": 56, "instruct": 56, "machin": 56}, "objects": {"": [[1, 0, 0, "-", "calculator"], [42, 0, 0, "-", "citam"], [43, 0, 0, "-", "close_contacts_calculator"], [44, 0, 0, "-", "contacts"]], "calculator": [[1, 1, 1, "", "Calculator"]], "calculator.Calculator": [[1, 2, 1, "", "finalize"], [1, 2, 1, "", "initialize"], [1, 2, 1, "", "run"]], "citam": [[2, 0, 0, "-", "__main__"], [3, 0, 0, "-", "api"], [9, 0, 0, "-", "cli"], [10, 0, 0, "-", "conf"], [19, 0, 0, "-", "engine"], [42, 3, 1, "", "settings"]], "citam.api": [[3, 3, 1, "", "app"], [4, 0, 0, "-", "parser"], [3, 4, 1, "", "run_server"], [5, 0, 0, "-", "server"], [6, 0, 0, "-", "storage"]], "citam.api.parser": [[4, 4, 1, "", "get_contacts"], [4, 4, 1, "", "get_coordinate_distribution"], [4, 4, 1, "", "get_trajectories"], [4, 4, 1, "", "get_trajectories_lines"]], "citam.api.server": [[5, 4, 1, "", "get_wsgi_app"]], "citam.api.storage": [[6, 1, 1, "", "BaseStorageDriver"], [6, 5, 1, "", "NoResultsFoundError"], [7, 0, 0, "-", "local"], [8, 0, 0, "-", "s3"]], "citam.api.storage.BaseStorageDriver": [[6, 2, 1, "", "get_contact_file"], [6, 2, 1, "", "get_coordinate_distribution_file"], [6, 2, 1, "", "get_heatmap_file"], [6, 2, 1, "", "get_manifest"], [6, 2, 1, "", "get_manifest_file"], [6, 2, 1, "", "get_map_file"], [6, 2, 1, "", "get_pair_contact_file"], [6, 2, 1, "", "get_policy_file"], [6, 2, 1, "", "get_statistics_file"], [6, 2, 1, "", "get_trajectory_file"], [6, 2, 1, "", "get_trajectory_file_location"], [6, 2, 1, "", "list_runs"]], "citam.api.storage.local": [[7, 1, 1, "", "LocalStorageDriver"]], "citam.api.storage.local.LocalStorageDriver": [[7, 2, 1, "", "get_contact_file"], [7, 2, 1, "", "get_coordinate_distribution_file"], [7, 2, 1, "", "get_heatmap_file"], [7, 2, 1, "", "get_manifest_file"], [7, 2, 1, "", "get_map_file"], [7, 2, 1, "", "get_pair_contact_file"], [7, 2, 1, "", "get_policy_file"], [7, 2, 1, "", "get_statistics_file"], [7, 2, 1, "", "get_trajectory_file"], [7, 2, 1, "", "get_trajectory_file_location"], [7, 2, 1, "", "list_runs"]], "citam.api.storage.s3": [[8, 1, 1, "", "S3StorageDriver"]], "citam.api.storage.s3.S3StorageDriver": [[8, 2, 1, "", "_get_s3_client"], [8, 2, 1, "", "_get_text_file"], [8, 2, 1, "", "get_contact_file"], [8, 2, 1, "", "get_coordinate_distribution_file"], [8, 2, 1, "", "get_heatmap_file"], [8, 2, 1, "", "get_manifest_file"], [8, 2, 1, "", "get_map_file"], [8, 2, 1, "", "get_pair_contact_file"], [8, 2, 1, "", "get_policy_file"], [8, 2, 1, "", "get_statistics_file"], [8, 2, 1, "", "get_trajectory_file"], [8, 2, 1, "", "get_trajectory_file_location"], [8, 2, 1, "", "list_runs"]], "citam.cli": [[9, 3, 1, "", "FACILITY_NAME"], [9, 3, 1, "", "FLOOR_NAME"], [9, 3, 1, "", "FORMAT"], [9, 3, 1, "", "SVG_PATH"], [9, 4, 1, "", "_add_config_commands"], [9, 4, 1, "", "_add_dash_commands"], [9, 4, 1, "", "_add_engine_commands"], [9, 4, 1, "", "_placeholder_func"], [9, 4, 1, "", "get_parser"], [9, 4, 1, "", "main"]], "citam.conf": [[10, 5, 1, "", "ConfigurationError"], [10, 3, 1, "", "settings"]], "citam.engine": [[19, 3, 1, "", "LOG"], [11, 0, 0, "-", "constants"], [13, 0, 0, "-", "core"], [19, 4, 1, "", "engine_run"], [15, 0, 0, "-", "facility"], [20, 0, 0, "-", "io"], [25, 0, 0, "-", "main"], [29, 0, 0, "-", "map"], [19, 4, 1, "", "parse_input_file"], [19, 4, 1, "", "run_simulation"], [36, 0, 0, "-", "schedulers"]], "citam.engine.constants": [[11, 3, 1, "", "CAFETERIA_VISIT"], [11, 3, 1, "", "DEFAULT_MEETINGS_POLICY"], [11, 3, 1, "", "DEFAULT_MEETING_ROOM_CAPACITY"], [11, 3, 1, "", "DEFAULT_SCHEDULING_RULES"], [11, 3, 1, "", "LAB_WORK"], [11, 3, 1, "", "MEETING"], [11, 3, 1, "", "MEETING_BUFFER"], [11, 3, 1, "", "OFFICE_WORK"], [11, 3, 1, "", "OPTIONAL_SPACE_METADATA"], [11, 3, 1, "", "REQUIRED_SPACE_METADATA"], [11, 3, 1, "", "RESTROOM_VISIT"], [11, 3, 1, "", "SUPPORTED_SPACE_FUNCTIONS"]], "citam.engine.core": [[12, 0, 0, "-", "agent"], [14, 0, 0, "-", "simulation"]], "citam.engine.core.agent": [[12, 1, 1, "", "Agent"]], "citam.engine.core.agent.Agent": [[12, 2, 1, "", "step"]], "citam.engine.core.simulation": [[14, 3, 1, "", "LOG"], [14, 1, 1, "", "Simulation"]], "citam.engine.core.simulation.Simulation": [[14, 2, 1, "", "create_agents"], [14, 2, 1, "", "create_sim_hash"], [14, 2, 1, "", "move_agents"], [14, 2, 1, "", "run_serial"], [14, 2, 1, "", "run_simulation_and_save_results"], [14, 2, 1, "", "save_manifest"], [14, 2, 1, "", "save_maps"], [14, 2, 1, "", "save_schedules"], [14, 2, 1, "", "step"]], "citam.engine.facility": [[16, 0, 0, "-", "indoor_facility"], [17, 0, 0, "-", "navbuilder"], [18, 0, 0, "-", "navigation"]], "citam.engine.facility.indoor_facility": [[16, 1, 1, "", "Facility"], [16, 3, 1, "", "LOG"]], "citam.engine.facility.indoor_facility.Facility": [[16, 2, 1, "", "choose_best_entrance"], [16, 2, 1, "", "find_and_remove_unreachable_rooms"], [16, 2, 1, "", "find_floor_by_name"], [16, 2, 1, "", "find_possible_entrance_doors"], [16, 2, 1, "", "find_space_by_name"], [16, 2, 1, "", "get_entrance_floor_and_space_id"], [16, 2, 1, "", "group_spaces"], [16, 2, 1, "", "is_door_in_navnet"], [16, 2, 1, "", "validate_entrances"]], "citam.engine.facility.navbuilder": [[17, 3, 1, "", "LOG"], [17, 1, 1, "", "NavigationBuilder"]], "citam.engine.facility.navbuilder.NavigationBuilder": [[17, 2, 1, "", "_add_segments_to_navnet"], [17, 2, 1, "", "_add_spaces_to_hallway_graph"], [17, 2, 1, "", "_aisle_has_nav_segment"], [17, 2, 1, "", "_check_for_intersection_with_other_segments"], [17, 2, 1, "", "_compute_intersection_and_remove_segments"], [17, 2, 1, "", "_create_nav_segments_for_aisles"], [17, 2, 1, "", "_create_nav_segments_for_doors"], [17, 2, 1, "", "_create_segments_for_new_space"], [17, 2, 1, "", "_find_location_of_point"], [17, 2, 1, "", "_find_valid_boundaries"], [17, 2, 1, "", "_handle_wall_intersects"], [17, 2, 1, "", "_is_crossing_door"], [17, 2, 1, "", "_is_crossing_wall"], [17, 2, 1, "", "_is_heading_outside_facility"], [17, 2, 1, "", "_is_point_on_boundaries"], [17, 2, 1, "", "_remove_intersecting_edges"], [17, 2, 1, "", "_remove_node_if_invalid"], [17, 2, 1, "", "_update_navnet"], [17, 2, 1, "", "_update_segments"], [17, 2, 1, "", "build"], [17, 2, 1, "", "compute_nav_segments"], [17, 2, 1, "", "compute_single_direction_nav_segment"], [17, 2, 1, "", "create_nav_segment_for_aisle"], [17, 2, 1, "", "export_navdata_to_json"], [17, 2, 1, "", "export_navnet_to_svg"], [17, 2, 1, "", "find_and_add_intersection_node_to_graph"], [17, 2, 1, "", "find_and_collapse_parallel_segments"], [17, 2, 1, "", "find_door_intersect"], [17, 2, 1, "", "find_if_valid_nearby_space_exits"], [17, 2, 1, "", "find_intersections_in_space"], [17, 2, 1, "", "load_nav_paths_from_svg_file"], [17, 2, 1, "", "load_navdata_from_json_files"], [17, 2, 1, "", "sanitize_navnet"], [17, 2, 1, "", "simplify_navigation_network"], [17, 2, 1, "", "update_network_from_svg_file"]], "citam.engine.facility.navigation": [[18, 3, 1, "", "LOG"], [18, 1, 1, "", "MultifloorType"], [18, 1, 1, "", "Navigation"], [18, 1, 1, "", "TrafficPattern"], [18, 4, 1, "", "remove_unnecessary_coords"], [18, 4, 1, "", "unroll_route"]], "citam.engine.facility.navigation.MultifloorType": [[18, 6, 1, "", "NAMING"], [18, 6, 1, "", "XY"]], "citam.engine.facility.navigation.Navigation": [[18, 2, 1, "", "add_all_vertical_edges_between_floors"], [18, 2, 1, "", "add_vertical_edges"], [18, 2, 1, "", "apply_traffic_policy"], [18, 2, 1, "", "apply_traffic_policy_to_edge"], [18, 2, 1, "", "create_multifloor_navnet"], [18, 2, 1, "", "get_best_possible_routes_multifloor"], [18, 2, 1, "", "get_best_possible_routes_same_floor"], [18, 2, 1, "", "get_corresponding_space_by_name"], [18, 2, 1, "", "get_corresponding_vertical_space"], [18, 2, 1, "", "get_route"], [18, 2, 1, "", "get_valid_multifloor_exit_nodes"], [18, 2, 1, "", "get_valid_single_floor_exit_nodes"], [18, 2, 1, "", "is_edge_matching_direction"], [18, 2, 1, "", "load_floor_navnet"], [18, 2, 1, "", "load_floor_oneway_net"], [18, 2, 1, "", "load_hallway_graph"], [18, 2, 1, "", "set_policy_for_aisle"]], "citam.engine.facility.navigation.TrafficPattern": [[18, 6, 1, "", "ONEWAY_NEGATIVE_DIRECTION"], [18, 6, 1, "", "ONEWAY_POSITIVE_DIRECTION"], [18, 6, 1, "", "TWO_WAY"]], "citam.engine.io": [[21, 0, 0, "-", "input_parser"], [22, 0, 0, "-", "serializer"], [23, 0, 0, "-", "storage_utils"], [24, 0, 0, "-", "visualization"]], "citam.engine.io.input_parser": [[21, 5, 1, "", "InvalidSVGError"], [21, 3, 1, "", "LOG"], [21, 5, 1, "", "MissingInputError"], [21, 3, 1, "", "UNABLE_TO_READ_FILE_STR"], [21, 4, 1, "", "_extract_doors"], [21, 4, 1, "", "_extract_space_metadata"], [21, 4, 1, "", "_extract_spaces"], [21, 4, 1, "", "_load_buildings_data"], [21, 4, 1, "", "_process_row"], [21, 4, 1, "", "check_for_required_values"], [21, 4, 1, "", "extract_buildings_elem"], [21, 4, 1, "", "parse_csv_metadata_file"], [21, 4, 1, "", "parse_input_file"], [21, 4, 1, "", "parse_meetings_policy_file"], [21, 4, 1, "", "parse_office_assignment_file"], [21, 4, 1, "", "parse_scheduling_policy_file"], [21, 4, 1, "", "parse_standalone_svg_floorplan_file"], [21, 4, 1, "", "parse_svg_floorplan_file"], [21, 4, 1, "", "validate_input_values"], [21, 4, 1, "", "validate_shifts"], [21, 4, 1, "", "validate_traffic_policy"]], "citam.engine.io.serializer": [[22, 1, 1, "", "_Serializer"], [22, 3, 1, "", "serializer"]], "citam.engine.io.serializer._Serializer": [[22, 2, 1, "", "__call__"], [22, 2, 1, "", "decoder_hook"], [22, 2, 1, "", "encoder_default"]], "citam.engine.io.storage_utils": [[23, 4, 1, "", "create_floor_datadir"], [23, 4, 1, "", "get_facility_datadir"], [23, 4, 1, "", "get_floor_datadir"], [23, 4, 1, "", "get_floorplans_directory"], [23, 4, 1, "", "get_user_cache"]], "citam.engine.io.visualization": [[24, 3, 1, "", "LINE_MARKER"], [24, 3, 1, "", "LOG"], [24, 3, 1, "", "PLUS_MARKER"], [24, 3, 1, "", "X_MARKER"], [24, 4, 1, "", "add_root_layer_to_svg"], [24, 4, 1, "", "create_arrow_svg_paths"], [24, 4, 1, "", "create_markers_svg_paths"], [24, 4, 1, "", "export_nav_network_to_svg"], [24, 4, 1, "", "export_possible_oneway_aisles_to_svg"], [24, 4, 1, "", "export_world_to_svg"]], "citam.engine.main": [[25, 3, 1, "", "LOG"], [25, 3, 1, "", "ROUTES_JSON_FILE"], [25, 4, 1, "", "build_navigation_network"], [25, 4, 1, "", "check_and_remove_node_from_oneway_network"], [25, 4, 1, "", "compute_occupancy_rate"], [25, 4, 1, "", "export_floorplan_to_svg"], [25, 4, 1, "", "export_navigation_graph_to_svg"], [25, 4, 1, "", "find_and_save_potential_one_way_aisles"], [25, 4, 1, "", "ingest_floorplan"], [25, 4, 1, "", "initialize_oneway_network"], [25, 4, 1, "", "list_facilities"], [25, 4, 1, "", "load_floorplans"], [25, 4, 1, "", "run_simulation"], [25, 4, 1, "", "show_floorplan"], [25, 4, 1, "", "update_floorplan_from_svg_file"]], "citam.engine.map": [[26, 0, 0, "-", "door"], [27, 0, 0, "-", "floorplan"], [28, 0, 0, "-", "geometry"], [30, 0, 0, "-", "ingester"], [31, 0, 0, "-", "point"], [32, 0, 0, "-", "space"], [33, 0, 0, "-", "updater"], [34, 0, 0, "-", "utils"]], "citam.engine.map.door": [[26, 1, 1, "", "Door"]], "citam.engine.map.door.Door": [[26, 2, 1, "", "__eq__"], [26, 2, 1, "", "__hash__"], [26, 2, 1, "", "__str__"], [26, 2, 1, "", "_as_dict"], [26, 6, 1, "", "_intersect_coords"], [26, 7, 1, "", "intersect_coords"], [26, 2, 1, "", "is_intersect_and_midpoint_same"], [26, 7, 1, "", "midpoint"], [26, 7, 1, "", "midpoint_coords"]], "citam.engine.map.floorplan": [[27, 1, 1, "", "Floorplan"], [27, 3, 1, "", "LOG"], [27, 4, 1, "", "floorplan_from_directory"]], "citam.engine.map.floorplan.Floorplan": [[27, 2, 1, "", "_as_dict"], [27, 2, 1, "", "export_to_svg"], [27, 2, 1, "", "find_space_by_id"], [27, 2, 1, "", "get_room_exit_coords"], [27, 2, 1, "", "identify_this_location"], [27, 2, 1, "", "match_doors_and_spaces"], [27, 2, 1, "", "move_agent"], [27, 2, 1, "", "place_agent"], [27, 2, 1, "", "remove_agent"], [27, 2, 1, "", "show"], [27, 2, 1, "", "show_summary"], [27, 2, 1, "", "to_json_file"]], "citam.engine.map.geometry": [[28, 4, 1, "", "_compute_key_vectors"], [28, 4, 1, "", "align_to_reference"], [28, 4, 1, "", "calculate_distance_between_walls"], [28, 4, 1, "", "calculate_dot_product_and_distance_between_walls"], [28, 4, 1, "", "calculate_dot_product_between_walls"], [28, 4, 1, "", "calculate_normal_vector_between_walls"], [28, 3, 1, "", "calculate_perpendicular_vector"], [28, 4, 1, "", "calculate_x_and_y_overlap"], [28, 4, 1, "", "compute_new_door_line"], [28, 4, 1, "", "create_parallel_line"], [28, 4, 1, "", "determine_orientation"], [28, 4, 1, "", "do_intersect"], [28, 4, 1, "", "do_lines_intersect_at_endpoint"], [28, 4, 1, "", "find_door_line"], [28, 4, 1, "", "is_one_segment_within_the_other"], [28, 4, 1, "", "is_point_on_line"], [28, 4, 1, "", "on_segment"], [28, 4, 1, "", "remove_segment_from_wall"], [28, 4, 1, "", "round_coords"], [28, 4, 1, "", "sample_random_points_from_line"]], "citam.engine.map.ingester": [[30, 1, 1, "", "FloorplanIngester"], [30, 3, 1, "", "LOG"], [30, 4, 1, "", "check_for_overlap_with_other_walls"], [30, 4, 1, "", "find_invalid_walls"]], "citam.engine.map.ingester.FloorplanIngester": [[30, 2, 1, "", "_create_door_object"], [30, 2, 1, "", "_find_all_overlapping_walls"], [30, 2, 1, "", "_remove_door_from_overlapping_walls"], [30, 2, 1, "", "build_door_line"], [30, 2, 1, "", "check_for_overlap_with_other_walls_and_add_door_to_wall"], [30, 2, 1, "", "create_new_door_to_room"], [30, 2, 1, "", "create_spaces_from_csv_and_svg_data"], [30, 2, 1, "", "create_spaces_from_svg_data"], [30, 2, 1, "", "find_and_remove_overlaps_between_walls"], [30, 2, 1, "", "find_closest_wall_and_best_door_line"], [30, 2, 1, "", "find_min_and_max_coordinates"], [30, 2, 1, "", "find_space_index_for_door"], [30, 2, 1, "", "find_valid_walls_and_create_doors"], [30, 2, 1, "", "get_building_walls"], [30, 2, 1, "", "get_floorplan"], [30, 2, 1, "", "process_doors"], [30, 2, 1, "", "read_data_from_csv_and_svg_files"], [30, 2, 1, "", "read_data_from_svg_file"], [30, 2, 1, "", "read_input_files"], [30, 2, 1, "", "run"], [30, 2, 1, "", "validate_buildings"]], "citam.engine.map.point": [[31, 1, 1, "", "Point"]], "citam.engine.map.point.Point": [[31, 2, 1, "", "__eq__"], [31, 2, 1, "", "__str__"], [31, 2, 1, "", "convert_to_cartesian"], [31, 2, 1, "", "convert_to_complex"]], "citam.engine.map.space": [[32, 1, 1, "", "Space"]], "citam.engine.map.space.Space": [[32, 2, 1, "", "__eq__"], [32, 2, 1, "", "__hash__"], [32, 2, 1, "", "__str__"], [32, 2, 1, "", "_as_dict"], [32, 2, 1, "", "get_random_internal_point"], [32, 2, 1, "", "get_space_coords"], [32, 2, 1, "", "infinite_line_intersection_test"], [32, 2, 1, "", "is_point_inside_space"], [32, 2, 1, "", "is_point_on_space_boundaries"], [32, 2, 1, "", "is_point_on_space_walls"], [32, 2, 1, "", "is_space_a_cafeteria"], [32, 2, 1, "", "is_space_a_hallway"], [32, 2, 1, "", "is_space_a_lab"], [32, 2, 1, "", "is_space_a_meeting_room"], [32, 2, 1, "", "is_space_a_restroom"], [32, 2, 1, "", "is_space_an_office"], [32, 2, 1, "", "is_space_vertical"]], "citam.engine.map.updater": [[33, 1, 1, "", "FloorplanUpdater"], [33, 3, 1, "", "LOG"]], "citam.engine.map.updater.FloorplanUpdater": [[33, 2, 1, "", "find_doors_to_remove"], [33, 2, 1, "", "find_spaces_for_door"], [33, 2, 1, "", "find_spaces_of_point"], [33, 2, 1, "", "find_special_walls"], [33, 2, 1, "", "overlap_door_with_wall"], [33, 2, 1, "", "process_new_doors"], [33, 2, 1, "", "read_updated_svg_file"], [33, 2, 1, "", "remove_door_from_spaces"], [33, 2, 1, "", "run"], [33, 2, 1, "", "update_from_csv_data"], [33, 2, 1, "", "update_from_svg_data"]], "citam.engine.map.utils": [[34, 4, 1, "", "check_for_collinearity"], [34, 4, 1, "", "compute_bounding_box"], [34, 4, 1, "", "do_walls_overlap"], [34, 4, 1, "", "extract_end_points"], [34, 4, 1, "", "find_aisles"], [34, 4, 1, "", "find_closest_parallel_wall"], [34, 4, 1, "", "generate_closed_path_for_aisle"], [34, 4, 1, "", "get_aisle_center_point_and_width"], [34, 4, 1, "", "is_this_an_aisle"], [34, 4, 1, "", "is_this_wall_part_of_an_aisle"], [34, 4, 1, "", "is_wall_valid_for_aisle"]], "citam.engine.schedulers": [[35, 0, 0, "-", "employee_scheduler"], [37, 0, 0, "-", "meetings"], [38, 0, 0, "-", "office_schedule"], [39, 0, 0, "-", "office_scheduler"], [40, 0, 0, "-", "schedule"], [41, 0, 0, "-", "scheduler"]], "citam.engine.schedulers.meetings": [[37, 3, 1, "", "LOG"], [37, 1, 1, "", "Meeting"], [37, 1, 1, "", "MeetingSchedule"]], "citam.engine.schedulers.meetings.Meeting": [[37, 2, 1, "", "__eq__"], [37, 2, 1, "", "__str__"]], "citam.engine.schedulers.meetings.MeetingSchedule": [[37, 2, 1, "", "_create_meetings_for_room"], [37, 2, 1, "", "_find_potential_attendees"], [37, 2, 1, "", "_generate_meeting_attendee_list"], [37, 2, 1, "", "_update_attendee_pool"], [37, 2, 1, "", "build"], [37, 2, 1, "", "create_new_meeting"], [37, 2, 1, "", "get_daily_meetings"]], "citam.engine.schedulers.office_schedule": [[38, 3, 1, "", "LOG"], [38, 1, 1, "", "OfficeSchedule"]], "citam.engine.schedulers.office_schedule.OfficeSchedule": [[38, 2, 1, "", "__str__"], [38, 2, 1, "", "build"], [38, 2, 1, "", "build_schedule_item"], [38, 2, 1, "", "choose_valid_scheduling_purpose"], [38, 2, 1, "", "count_purpose_occurence_in_schedule_items"], [38, 2, 1, "", "find_next_schedule_item"], [38, 2, 1, "", "find_possible_purposes"], [38, 2, 1, "", "get_max_duration_for_purpose"], [38, 2, 1, "", "get_next_position"], [38, 2, 1, "", "get_pace"], [38, 2, 1, "", "get_valid_purposes_from_possible_purposes"], [38, 2, 1, "", "update_itinerary"], [38, 2, 1, "", "update_schedule_items"]], "citam.engine.schedulers.office_scheduler": [[39, 3, 1, "", "LOG"], [39, 1, 1, "", "OfficeScheduler"]], "citam.engine.schedulers.office_scheduler.OfficeScheduler": [[39, 2, 1, "", "assign_office"], [39, 2, 1, "", "generate_meetings"], [39, 2, 1, "", "run"], [39, 2, 1, "", "save_to_files"]], "citam.engine.schedulers.schedule": [[40, 1, 1, "", "Schedule"], [40, 1, 1, "", "ScheduleItem"]], "citam.engine.schedulers.schedule.Schedule": [[40, 2, 1, "", "build"]], "citam.engine.schedulers.scheduler": [[41, 1, 1, "", "Scheduler"]], "citam.engine.schedulers.scheduler.Scheduler": [[41, 2, 1, "", "run"], [41, 2, 1, "", "save_to_files"]], "close_contacts_calculator": [[43, 1, 1, "", "CloseContactsCalculator"]], "close_contacts_calculator.CloseContactsCalculator": [[43, 2, 1, "", "add_contact_event"], [43, 2, 1, "", "create_svg_heatmap"], [43, 2, 1, "", "extract_contact_distribution_per_agent"], [43, 2, 1, "", "finalize"], [43, 2, 1, "", "identify_xy_proximity"], [43, 2, 1, "", "initialize"], [43, 2, 1, "", "run"], [43, 2, 1, "", "save_to_files"], [43, 2, 1, "", "verify_and_add_contact"]], "contacts": [[44, 1, 1, "", "ContactEvent"], [44, 1, 1, "", "ContactEvents"], [44, 4, 1, "", "update_data_dictionary"]], "contacts.ContactEvents": [[44, 2, 1, "", "add_contact"], [44, 2, 1, "", "count"], [44, 2, 1, "", "extract_statistics"], [44, 2, 1, "", "get_contacts_per_coordinates"], [44, 2, 1, "", "get_floor_contact_coords"], [44, 2, 1, "", "save_pairwise_contacts"], [44, 2, 1, "", "save_raw_contact_data"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:function", "5": "py:exception", "6": "py:attribute", "7": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"], "6": ["py", "attribute", "Python attribute"], "7": ["py", "property", "Python property"]}, "titleterms": {"api": [0, 3, 4, 5, 6, 7, 8, 45], "develop": [0, 47, 48], "refer": [0, 45, 46, 47, 48], "calcul": 1, "modul": [1, 4, 5, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44], "content": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 52], "class": [1, 6, 7, 8, 12, 14, 16, 17, 18, 22, 26, 27, 30, 31, 32, 33, 37, 38, 39, 40, 41, 43, 44], "citam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 52], "__main__": 2, "command": [3, 46], "subpackag": [3, 19, 42], "submodul": [3, 6, 13, 15, 19, 20, 29, 36, 42], "packag": [3, 6, 19, 42], "function": [3, 4, 5, 9, 18, 19, 21, 23, 24, 25, 27, 28, 30, 34, 44], "attribut": [3, 9, 14, 16, 17, 18, 19, 21, 22, 24, 25, 27, 28, 30, 33, 37, 38, 39], "parser": 4, "server": 5, "storag": [6, 7, 8], "local": 7, "s3": 8, "cli": [9, 46, 47], "conf": 10, "engin": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 48], "constant": 11, "core": [12, 13, 14], "agent": 12, "simul": [14, 53, 55], "facil": [15, 16, 17, 18, 49, 55], "indoor_facil": 16, "navbuild": 17, "navig": [18, 55], "io": [20, 21, 22, 23, 24], "input_pars": 21, "serial": 22, "storage_util": 23, "visual": [24, 56], "main": [25, 53], "map": [26, 27, 28, 29, 30, 31, 32, 33, 34], "door": [26, 49], "floorplan": [27, 46], "geometri": 28, "ingest": [30, 46], "point": 31, "space": [32, 49], "updat": [33, 46], "util": 34, "schedul": [35, 36, 37, 38, 39, 40, 41, 53], "employee_schedul": 35, "meet": [37, 53], "office_schedul": [38, 39], "close_contacts_calcul": 43, "contact": 44, "posit": 46, "argument": 46, "sub": 46, "name": 46, "list": 46, "export": 46, "navnet": 46, "potenti": 46, "onewai": 46, "build": 46, "run": [46, 55], "config": 46, "dash": 46, "data": 49, "requir": [49, 53], "svg": 49, "bare": 49, "essenti": 49, "detail": 49, "group": 49, "how": 50, "work": 50, "global": 51, "configur": 51, "welcom": 52, "": 52, "document": 52, "indic": 52, "tabl": 52, "input": 53, "polici": [53, 55], "output": 54, "descript": 54, "floor": 54, "base": 54, "result": [54, 56], "overal": 54, "tutori": 55, "introduct": 55, "ad": 55, "gener": 55, "network": 55, "explor": 55, "To": 55, "learn": 55, "more": 55}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API Developer Reference": [[0, "api-developer-reference"]], "calculator": [[1, "module-calculator"]], "Module Contents": [[1, "module-contents"], [4, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [14, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [43, "module-contents"], [44, "module-contents"]], "Classes": [[1, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [12, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [22, "classes"], [26, "classes"], [27, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [43, "classes"], [44, "classes"]], "citam.__main__": [[2, "module-citam.__main__"]], "citam.api": [[3, "module-citam.api"]], "Commands": [[3, "commands"]], "Subpackages": [[3, "subpackages"], [19, "subpackages"], [42, "subpackages"]], "Submodules": [[3, "submodules"], [6, "submodules"], [13, "submodules"], [15, "submodules"], [19, "submodules"], [20, "submodules"], [29, "submodules"], [36, "submodules"], [42, "submodules"]], "Package Contents": [[3, "package-contents"], [6, "package-contents"], [19, "package-contents"], [42, "package-contents"]], "Functions": [[3, "functions"], [4, "functions"], [5, "functions"], [9, "functions"], [18, "functions"], [19, "functions"], [21, "functions"], [23, "functions"], [24, "functions"], [25, "functions"], [27, "functions"], [28, "functions"], [30, "functions"], [34, "functions"], [44, "functions"]], "Attributes": [[3, "attributes"], [9, "attributes"], [14, "attributes"], [16, "attributes"], [17, "attributes"], [18, "attributes"], [19, "attributes"], [21, "attributes"], [22, "attributes"], [24, "attributes"], [25, "attributes"], [27, "attributes"], [28, "attributes"], [30, "attributes"], [33, "attributes"], [37, "attributes"], [38, "attributes"], [39, "attributes"]], "citam.api.parser": [[4, "module-citam.api.parser"]], "citam.api.server": [[5, "module-citam.api.server"]], "citam.api.storage": [[6, "module-citam.api.storage"]], "citam.api.storage.local": [[7, "module-citam.api.storage.local"]], "citam.api.storage.s3": [[8, "module-citam.api.storage.s3"]], "citam.cli": [[9, "module-citam.cli"]], "citam.conf": [[10, "module-citam.conf"]], "citam.engine.constants": [[11, "module-citam.engine.constants"]], "citam.engine.core.agent": [[12, "module-citam.engine.core.agent"]], "citam.engine.core": [[13, "module-citam.engine.core"]], "citam.engine.core.simulation": [[14, "module-citam.engine.core.simulation"]], "citam.engine.facility": [[15, "module-citam.engine.facility"]], "citam.engine.facility.indoor_facility": [[16, "module-citam.engine.facility.indoor_facility"]], "citam.engine.facility.navbuilder": [[17, "module-citam.engine.facility.navbuilder"]], "citam.engine.facility.navigation": [[18, "module-citam.engine.facility.navigation"]], "citam.engine": [[19, "module-citam.engine"]], "citam.engine.io": [[20, "module-citam.engine.io"]], "citam.engine.io.input_parser": [[21, "module-citam.engine.io.input_parser"]], "citam.engine.io.serializer": [[22, "module-citam.engine.io.serializer"]], "citam.engine.io.storage_utils": [[23, "module-citam.engine.io.storage_utils"]], "citam.engine.io.visualization": [[24, "module-citam.engine.io.visualization"]], "citam.engine.main": [[25, "module-citam.engine.main"]], "citam.engine.map.door": [[26, "module-citam.engine.map.door"]], "citam.engine.map.floorplan": [[27, "module-citam.engine.map.floorplan"]], "citam.engine.map.geometry": [[28, "module-citam.engine.map.geometry"]], "citam.engine.map": [[29, "module-citam.engine.map"]], "citam.engine.map.ingester": [[30, "module-citam.engine.map.ingester"]], "citam.engine.map.point": [[31, "module-citam.engine.map.point"]], "citam.engine.map.space": [[32, "module-citam.engine.map.space"]], "citam.engine.map.updater": [[33, "module-citam.engine.map.updater"]], "citam.engine.map.utils": [[34, "module-citam.engine.map.utils"]], "citam.engine.schedulers.employee_scheduler": [[35, "module-citam.engine.schedulers.employee_scheduler"]], "citam.engine.schedulers": [[36, "module-citam.engine.schedulers"]], "citam.engine.schedulers.meetings": [[37, "module-citam.engine.schedulers.meetings"]], "citam.engine.schedulers.office_schedule": [[38, "module-citam.engine.schedulers.office_schedule"]], "citam.engine.schedulers.office_scheduler": [[39, "module-citam.engine.schedulers.office_scheduler"]], "citam.engine.schedulers.schedule": [[40, "module-citam.engine.schedulers.schedule"]], "citam.engine.schedulers.scheduler": [[41, "module-citam.engine.schedulers.scheduler"]], "citam": [[42, "module-citam"]], "close_contacts_calculator": [[43, "module-close_contacts_calculator"]], "contacts": [[44, "module-contacts"]], "API Reference": [[45, "api-reference"]], "CLI Reference": [[46, "cli-reference"]], "Positional Arguments": [[46, "Positional Arguments"], [46, "Positional Arguments_repeat1"], [46, "Positional Arguments_repeat2"], [46, "Positional Arguments_repeat3"], [46, "Positional Arguments_repeat4"], [46, "Positional Arguments_repeat5"], [46, "Positional Arguments_repeat6"], [46, "Positional Arguments_repeat7"], [46, "Positional Arguments_repeat8"], [46, "Positional Arguments_repeat9"]], "Sub-commands:": [[46, "Sub-commands:"], [46, "Sub-commands:_repeat1"]], "engine": [[46, "engine"]], "Named Arguments": [[46, "Named Arguments"], [46, "Named Arguments_repeat1"], [46, "Named Arguments_repeat2"], [46, "Named Arguments_repeat3"], [46, "Named Arguments_repeat4"], [46, "Named Arguments_repeat5"], [46, "Named Arguments_repeat6"], [46, "Named Arguments_repeat7"], [46, "Named Arguments_repeat8"], [46, "Named Arguments_repeat9"], [46, "Named Arguments_repeat10"]], "ingest": [[46, "ingest"]], "update-floorplan": [[46, "update-floorplan"]], "list": [[46, "list"]], "export-floorplan": [[46, "export-floorplan"]], "export-navnet": [[46, "export-navnet"]], "export-potential-oneways": [[46, "export-potential-oneways"]], "build-navnet": [[46, "build-navnet"]], "run": [[46, "run"]], "config": [[46, "config"]], "dash": [[46, "dash"]], "CLI Developer Reference": [[47, "cli-developer-reference"]], "Engine Developer Reference": [[48, "engine-developer-reference"]], "Facility Data Requirements": [[49, "facility-data-requirements"]], "SVG Bare Essentials": [[49, "svg-bare-essentials"]], "Detailed Requirements": [[49, "detailed-requirements"]], "Facilities": [[49, "facilities"]], "Groups": [[49, "groups"]], "Spaces": [[49, "spaces"]], "Doors": [[49, "doors"]], "How it Works": [[50, "how-it-works"]], "Global Configuration": [[51, "global-configuration"]], "Welcome to CITAM\u2019s documentation": [[52, "welcome-to-citam-s-documentation"]], "Contents:": [[52, null]], "Indices and tables": [[52, "indices-and-tables"]], "Simulation Input Requirements": [[53, "simulation-input-requirements"]], "Main Simulation Inputs": [[53, "main-simulation-inputs"]], "Scheduling Policy": [[53, "scheduling-policy"]], "Meetings Policy": [[53, "meetings-policy"]], "Output Description": [[54, "output-description"]], "Floor-Based Results": [[54, "floor-based-results"]], "Overall Results": [[54, "overall-results"]], "Tutorial": [[55, "tutorial"]], "Introduction": [[55, "introduction"]], "Adding a facility": [[55, "adding-a-facility"]], "Generating the Navigation Network": [[55, "generating-the-navigation-network"]], "Running a simulation": [[55, "running-a-simulation"]], "Exploring Policies": [[55, "exploring-policies"]], "To Learn More": [[55, "to-learn-more"]], "Visualize Results": [[56, "visualize-results"]]}, "indexentries": {"calculator (class in calculator)": [[1, "calculator.Calculator"]], "calculator": [[1, "module-calculator"]], "finalize() (calculator.calculator method)": [[1, "calculator.Calculator.finalize"]], "initialize() (calculator.calculator method)": [[1, "calculator.Calculator.initialize"]], "module": [[1, "module-calculator"], [2, "module-citam.__main__"], [3, "module-citam.api"], [4, "module-citam.api.parser"], [5, "module-citam.api.server"], [6, "module-citam.api.storage"], [7, "module-citam.api.storage.local"], [8, "module-citam.api.storage.s3"], [9, "module-citam.cli"], [10, "module-citam.conf"], [11, "module-citam.engine.constants"], [12, "module-citam.engine.core.agent"], [13, "module-citam.engine.core"], [14, "module-citam.engine.core.simulation"], [15, "module-citam.engine.facility"], [16, "module-citam.engine.facility.indoor_facility"], [17, "module-citam.engine.facility.navbuilder"], [18, "module-citam.engine.facility.navigation"], [19, "module-citam.engine"], [20, "module-citam.engine.io"], [21, "module-citam.engine.io.input_parser"], [22, "module-citam.engine.io.serializer"], [23, "module-citam.engine.io.storage_utils"], [24, "module-citam.engine.io.visualization"], [25, "module-citam.engine.main"], [26, "module-citam.engine.map.door"], [27, "module-citam.engine.map.floorplan"], [28, "module-citam.engine.map.geometry"], [29, "module-citam.engine.map"], [30, "module-citam.engine.map.ingester"], [31, "module-citam.engine.map.point"], [32, "module-citam.engine.map.space"], [33, "module-citam.engine.map.updater"], [34, "module-citam.engine.map.utils"], [35, "module-citam.engine.schedulers.employee_scheduler"], [36, "module-citam.engine.schedulers"], [37, "module-citam.engine.schedulers.meetings"], [38, "module-citam.engine.schedulers.office_schedule"], [39, "module-citam.engine.schedulers.office_scheduler"], [40, "module-citam.engine.schedulers.schedule"], [41, "module-citam.engine.schedulers.scheduler"], [42, "module-citam"], [43, "module-close_contacts_calculator"], [44, "module-contacts"]], "run() (calculator.calculator method)": [[1, "calculator.Calculator.run"]], "citam.__main__": [[2, "module-citam.__main__"]], "app (in module citam.api)": [[3, "citam.api.app"]], "citam.api": [[3, "module-citam.api"]], "run_server() (in module citam.api)": [[3, "citam.api.run_server"]], "citam.api.parser": [[4, "module-citam.api.parser"]], "get_contacts() (in module citam.api.parser)": [[4, "citam.api.parser.get_contacts"]], "get_coordinate_distribution() (in module citam.api.parser)": [[4, "citam.api.parser.get_coordinate_distribution"]], "get_trajectories() (in module citam.api.parser)": [[4, "citam.api.parser.get_trajectories"]], "get_trajectories_lines() (in module citam.api.parser)": [[4, "citam.api.parser.get_trajectories_lines"]], "citam.api.server": [[5, "module-citam.api.server"]], "get_wsgi_app() (in module citam.api.server)": [[5, "citam.api.server.get_wsgi_app"]], "basestoragedriver (class in citam.api.storage)": [[6, "citam.api.storage.BaseStorageDriver"]], "noresultsfounderror": [[6, "citam.api.storage.NoResultsFoundError"]], "citam.api.storage": [[6, "module-citam.api.storage"]], "get_contact_file() (citam.api.storage.basestoragedriver method)": [[6, "citam.api.storage.BaseStorageDriver.get_contact_file"]], "get_coordinate_distribution_file() (citam.api.storage.basestoragedriver method)": [[6, "citam.api.storage.BaseStorageDriver.get_coordinate_distribution_file"]], "get_heatmap_file() (citam.api.storage.basestoragedriver method)": [[6, "citam.api.storage.BaseStorageDriver.get_heatmap_file"]], "get_manifest() (citam.api.storage.basestoragedriver method)": [[6, "citam.api.storage.BaseStorageDriver.get_manifest"]], "get_manifest_file() (citam.api.storage.basestoragedriver method)": [[6, "citam.api.storage.BaseStorageDriver.get_manifest_file"]], "get_map_file() (citam.api.storage.basestoragedriver method)": [[6, "citam.api.storage.BaseStorageDriver.get_map_file"]], "get_pair_contact_file() (citam.api.storage.basestoragedriver method)": [[6, "citam.api.storage.BaseStorageDriver.get_pair_contact_file"]], "get_policy_file() (citam.api.storage.basestoragedriver method)": [[6, "citam.api.storage.BaseStorageDriver.get_policy_file"]], "get_statistics_file() (citam.api.storage.basestoragedriver method)": [[6, "citam.api.storage.BaseStorageDriver.get_statistics_file"]], "get_trajectory_file() (citam.api.storage.basestoragedriver method)": [[6, "citam.api.storage.BaseStorageDriver.get_trajectory_file"]], "get_trajectory_file_location() (citam.api.storage.basestoragedriver method)": [[6, "citam.api.storage.BaseStorageDriver.get_trajectory_file_location"]], "list_runs() (citam.api.storage.basestoragedriver method)": [[6, "citam.api.storage.BaseStorageDriver.list_runs"]], "localstoragedriver (class in citam.api.storage.local)": [[7, "citam.api.storage.local.LocalStorageDriver"]], "citam.api.storage.local": [[7, "module-citam.api.storage.local"]], "get_contact_file() (citam.api.storage.local.localstoragedriver method)": [[7, "citam.api.storage.local.LocalStorageDriver.get_contact_file"]], "get_coordinate_distribution_file() (citam.api.storage.local.localstoragedriver method)": [[7, "citam.api.storage.local.LocalStorageDriver.get_coordinate_distribution_file"]], "get_heatmap_file() (citam.api.storage.local.localstoragedriver method)": [[7, "citam.api.storage.local.LocalStorageDriver.get_heatmap_file"]], "get_manifest_file() (citam.api.storage.local.localstoragedriver method)": [[7, "citam.api.storage.local.LocalStorageDriver.get_manifest_file"]], "get_map_file() (citam.api.storage.local.localstoragedriver method)": [[7, "citam.api.storage.local.LocalStorageDriver.get_map_file"]], "get_pair_contact_file() (citam.api.storage.local.localstoragedriver method)": [[7, "citam.api.storage.local.LocalStorageDriver.get_pair_contact_file"]], "get_policy_file() (citam.api.storage.local.localstoragedriver method)": [[7, "citam.api.storage.local.LocalStorageDriver.get_policy_file"]], "get_statistics_file() (citam.api.storage.local.localstoragedriver method)": [[7, "citam.api.storage.local.LocalStorageDriver.get_statistics_file"]], "get_trajectory_file() (citam.api.storage.local.localstoragedriver method)": [[7, "citam.api.storage.local.LocalStorageDriver.get_trajectory_file"]], "get_trajectory_file_location() (citam.api.storage.local.localstoragedriver method)": [[7, "citam.api.storage.local.LocalStorageDriver.get_trajectory_file_location"]], "list_runs() (citam.api.storage.local.localstoragedriver method)": [[7, "citam.api.storage.local.LocalStorageDriver.list_runs"]], "s3storagedriver (class in citam.api.storage.s3)": [[8, "citam.api.storage.s3.S3StorageDriver"]], "_get_s3_client() (citam.api.storage.s3.s3storagedriver method)": [[8, "citam.api.storage.s3.S3StorageDriver._get_s3_client"]], "_get_text_file() (citam.api.storage.s3.s3storagedriver method)": [[8, "citam.api.storage.s3.S3StorageDriver._get_text_file"]], "citam.api.storage.s3": [[8, "module-citam.api.storage.s3"]], "get_contact_file() (citam.api.storage.s3.s3storagedriver method)": [[8, "citam.api.storage.s3.S3StorageDriver.get_contact_file"]], "get_coordinate_distribution_file() (citam.api.storage.s3.s3storagedriver method)": [[8, "citam.api.storage.s3.S3StorageDriver.get_coordinate_distribution_file"]], "get_heatmap_file() (citam.api.storage.s3.s3storagedriver method)": [[8, "citam.api.storage.s3.S3StorageDriver.get_heatmap_file"]], "get_manifest_file() (citam.api.storage.s3.s3storagedriver method)": [[8, "citam.api.storage.s3.S3StorageDriver.get_manifest_file"]], "get_map_file() (citam.api.storage.s3.s3storagedriver method)": [[8, "citam.api.storage.s3.S3StorageDriver.get_map_file"]], "get_pair_contact_file() (citam.api.storage.s3.s3storagedriver method)": [[8, "citam.api.storage.s3.S3StorageDriver.get_pair_contact_file"]], "get_policy_file() (citam.api.storage.s3.s3storagedriver method)": [[8, "citam.api.storage.s3.S3StorageDriver.get_policy_file"]], "get_statistics_file() (citam.api.storage.s3.s3storagedriver method)": [[8, "citam.api.storage.s3.S3StorageDriver.get_statistics_file"]], "get_trajectory_file() (citam.api.storage.s3.s3storagedriver method)": [[8, "citam.api.storage.s3.S3StorageDriver.get_trajectory_file"]], "get_trajectory_file_location() (citam.api.storage.s3.s3storagedriver method)": [[8, "citam.api.storage.s3.S3StorageDriver.get_trajectory_file_location"]], "list_runs() (citam.api.storage.s3.s3storagedriver method)": [[8, "citam.api.storage.s3.S3StorageDriver.list_runs"]], "facility_name (in module citam.cli)": [[9, "citam.cli.FACILITY_NAME"]], "floor_name (in module citam.cli)": [[9, "citam.cli.FLOOR_NAME"]], "format (in module citam.cli)": [[9, "citam.cli.FORMAT"]], "svg_path (in module citam.cli)": [[9, "citam.cli.SVG_PATH"]], "_add_config_commands() (in module citam.cli)": [[9, "citam.cli._add_config_commands"]], "_add_dash_commands() (in module citam.cli)": [[9, "citam.cli._add_dash_commands"]], "_add_engine_commands() (in module citam.cli)": [[9, "citam.cli._add_engine_commands"]], "_placeholder_func() (in module citam.cli)": [[9, "citam.cli._placeholder_func"]], "citam.cli": [[9, "module-citam.cli"]], "get_parser() (in module citam.cli)": [[9, "citam.cli.get_parser"]], "main() (in module citam.cli)": [[9, "citam.cli.main"]], "configurationerror": [[10, "citam.conf.ConfigurationError"]], "citam.conf": [[10, "module-citam.conf"]], "settings (in module citam.conf)": [[10, "citam.conf.settings"]], "cafeteria_visit (in module citam.engine.constants)": [[11, "citam.engine.constants.CAFETERIA_VISIT"]], "default_meetings_policy (in module citam.engine.constants)": [[11, "citam.engine.constants.DEFAULT_MEETINGS_POLICY"]], "default_meeting_room_capacity (in module citam.engine.constants)": [[11, "citam.engine.constants.DEFAULT_MEETING_ROOM_CAPACITY"]], "default_scheduling_rules (in module citam.engine.constants)": [[11, "citam.engine.constants.DEFAULT_SCHEDULING_RULES"]], "lab_work (in module citam.engine.constants)": [[11, "citam.engine.constants.LAB_WORK"]], "meeting (in module citam.engine.constants)": [[11, "citam.engine.constants.MEETING"]], "meeting_buffer (in module citam.engine.constants)": [[11, "citam.engine.constants.MEETING_BUFFER"]], "office_work (in module citam.engine.constants)": [[11, "citam.engine.constants.OFFICE_WORK"]], "optional_space_metadata (in module citam.engine.constants)": [[11, "citam.engine.constants.OPTIONAL_SPACE_METADATA"]], "required_space_metadata (in module citam.engine.constants)": [[11, "citam.engine.constants.REQUIRED_SPACE_METADATA"]], "restroom_visit (in module citam.engine.constants)": [[11, "citam.engine.constants.RESTROOM_VISIT"]], "supported_space_functions (in module citam.engine.constants)": [[11, "citam.engine.constants.SUPPORTED_SPACE_FUNCTIONS"]], "citam.engine.constants": [[11, "module-citam.engine.constants"]], "agent (class in citam.engine.core.agent)": [[12, "citam.engine.core.agent.Agent"]], "citam.engine.core.agent": [[12, "module-citam.engine.core.agent"]], "step() (citam.engine.core.agent.agent method)": [[12, "citam.engine.core.agent.Agent.step"]], "citam.engine.core": [[13, "module-citam.engine.core"]], "log (in module citam.engine.core.simulation)": [[14, "citam.engine.core.simulation.LOG"]], "simulation (class in citam.engine.core.simulation)": [[14, "citam.engine.core.simulation.Simulation"]], "citam.engine.core.simulation": [[14, "module-citam.engine.core.simulation"]], "create_agents() (citam.engine.core.simulation.simulation method)": [[14, "citam.engine.core.simulation.Simulation.create_agents"]], "create_sim_hash() (citam.engine.core.simulation.simulation method)": [[14, "citam.engine.core.simulation.Simulation.create_sim_hash"]], "move_agents() (citam.engine.core.simulation.simulation method)": [[14, "citam.engine.core.simulation.Simulation.move_agents"]], "run_serial() (citam.engine.core.simulation.simulation method)": [[14, "citam.engine.core.simulation.Simulation.run_serial"]], "run_simulation_and_save_results() (citam.engine.core.simulation.simulation method)": [[14, "citam.engine.core.simulation.Simulation.run_simulation_and_save_results"]], "save_manifest() (citam.engine.core.simulation.simulation method)": [[14, "citam.engine.core.simulation.Simulation.save_manifest"]], "save_maps() (citam.engine.core.simulation.simulation method)": [[14, "citam.engine.core.simulation.Simulation.save_maps"]], "save_schedules() (citam.engine.core.simulation.simulation method)": [[14, "citam.engine.core.simulation.Simulation.save_schedules"]], "step() (citam.engine.core.simulation.simulation method)": [[14, "citam.engine.core.simulation.Simulation.step"]], "citam.engine.facility": [[15, "module-citam.engine.facility"]], "facility (class in citam.engine.facility.indoor_facility)": [[16, "citam.engine.facility.indoor_facility.Facility"]], "log (in module citam.engine.facility.indoor_facility)": [[16, "citam.engine.facility.indoor_facility.LOG"]], "choose_best_entrance() (citam.engine.facility.indoor_facility.facility method)": [[16, "citam.engine.facility.indoor_facility.Facility.choose_best_entrance"]], "citam.engine.facility.indoor_facility": [[16, "module-citam.engine.facility.indoor_facility"]], "find_and_remove_unreachable_rooms() (citam.engine.facility.indoor_facility.facility method)": [[16, "citam.engine.facility.indoor_facility.Facility.find_and_remove_unreachable_rooms"]], "find_floor_by_name() (citam.engine.facility.indoor_facility.facility method)": [[16, "citam.engine.facility.indoor_facility.Facility.find_floor_by_name"]], "find_possible_entrance_doors() (citam.engine.facility.indoor_facility.facility method)": [[16, "citam.engine.facility.indoor_facility.Facility.find_possible_entrance_doors"]], "find_space_by_name() (citam.engine.facility.indoor_facility.facility method)": [[16, "citam.engine.facility.indoor_facility.Facility.find_space_by_name"]], "get_entrance_floor_and_space_id() (citam.engine.facility.indoor_facility.facility method)": [[16, "citam.engine.facility.indoor_facility.Facility.get_entrance_floor_and_space_id"]], "group_spaces() (citam.engine.facility.indoor_facility.facility method)": [[16, "citam.engine.facility.indoor_facility.Facility.group_spaces"]], "is_door_in_navnet() (citam.engine.facility.indoor_facility.facility method)": [[16, "citam.engine.facility.indoor_facility.Facility.is_door_in_navnet"]], "validate_entrances() (citam.engine.facility.indoor_facility.facility method)": [[16, "citam.engine.facility.indoor_facility.Facility.validate_entrances"]], "log (in module citam.engine.facility.navbuilder)": [[17, "citam.engine.facility.navbuilder.LOG"]], "navigationbuilder (class in citam.engine.facility.navbuilder)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder"]], "_add_segments_to_navnet() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._add_segments_to_navnet"]], "_add_spaces_to_hallway_graph() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._add_spaces_to_hallway_graph"]], "_aisle_has_nav_segment() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._aisle_has_nav_segment"]], "_check_for_intersection_with_other_segments() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._check_for_intersection_with_other_segments"]], "_compute_intersection_and_remove_segments() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._compute_intersection_and_remove_segments"]], "_create_nav_segments_for_aisles() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._create_nav_segments_for_aisles"]], "_create_nav_segments_for_doors() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._create_nav_segments_for_doors"]], "_create_segments_for_new_space() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._create_segments_for_new_space"]], "_find_location_of_point() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._find_location_of_point"]], "_find_valid_boundaries() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._find_valid_boundaries"]], "_handle_wall_intersects() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._handle_wall_intersects"]], "_is_crossing_door() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._is_crossing_door"]], "_is_crossing_wall() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._is_crossing_wall"]], "_is_heading_outside_facility() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._is_heading_outside_facility"]], "_is_point_on_boundaries() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._is_point_on_boundaries"]], "_remove_intersecting_edges() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._remove_intersecting_edges"]], "_remove_node_if_invalid() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._remove_node_if_invalid"]], "_update_navnet() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._update_navnet"]], "_update_segments() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder._update_segments"]], "build() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.build"]], "citam.engine.facility.navbuilder": [[17, "module-citam.engine.facility.navbuilder"]], "compute_nav_segments() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.compute_nav_segments"]], "compute_single_direction_nav_segment() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.compute_single_direction_nav_segment"]], "create_nav_segment_for_aisle() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.create_nav_segment_for_aisle"]], "export_navdata_to_json() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.export_navdata_to_json"]], "export_navnet_to_svg() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.export_navnet_to_svg"]], "find_and_add_intersection_node_to_graph() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.find_and_add_intersection_node_to_graph"]], "find_and_collapse_parallel_segments() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.find_and_collapse_parallel_segments"]], "find_door_intersect() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.find_door_intersect"]], "find_if_valid_nearby_space_exits() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.find_if_valid_nearby_space_exits"]], "find_intersections_in_space() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.find_intersections_in_space"]], "load_nav_paths_from_svg_file() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.load_nav_paths_from_svg_file"]], "load_navdata_from_json_files() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.load_navdata_from_json_files"]], "sanitize_navnet() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.sanitize_navnet"]], "simplify_navigation_network() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.simplify_navigation_network"]], "update_network_from_svg_file() (citam.engine.facility.navbuilder.navigationbuilder method)": [[17, "citam.engine.facility.navbuilder.NavigationBuilder.update_network_from_svg_file"]], "log (in module citam.engine.facility.navigation)": [[18, "citam.engine.facility.navigation.LOG"]], "multifloortype (class in citam.engine.facility.navigation)": [[18, "citam.engine.facility.navigation.MultifloorType"]], "naming (citam.engine.facility.navigation.multifloortype attribute)": [[18, "citam.engine.facility.navigation.MultifloorType.NAMING"]], "navigation (class in citam.engine.facility.navigation)": [[18, "citam.engine.facility.navigation.Navigation"]], "oneway_negative_direction (citam.engine.facility.navigation.trafficpattern attribute)": [[18, "citam.engine.facility.navigation.TrafficPattern.ONEWAY_NEGATIVE_DIRECTION"]], "oneway_positive_direction (citam.engine.facility.navigation.trafficpattern attribute)": [[18, "citam.engine.facility.navigation.TrafficPattern.ONEWAY_POSITIVE_DIRECTION"]], "two_way (citam.engine.facility.navigation.trafficpattern attribute)": [[18, "citam.engine.facility.navigation.TrafficPattern.TWO_WAY"]], "trafficpattern (class in citam.engine.facility.navigation)": [[18, "citam.engine.facility.navigation.TrafficPattern"]], "xy (citam.engine.facility.navigation.multifloortype attribute)": [[18, "citam.engine.facility.navigation.MultifloorType.XY"]], "add_all_vertical_edges_between_floors() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.add_all_vertical_edges_between_floors"]], "add_vertical_edges() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.add_vertical_edges"]], "apply_traffic_policy() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.apply_traffic_policy"]], "apply_traffic_policy_to_edge() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.apply_traffic_policy_to_edge"]], "citam.engine.facility.navigation": [[18, "module-citam.engine.facility.navigation"]], "create_multifloor_navnet() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.create_multifloor_navnet"]], "get_best_possible_routes_multifloor() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.get_best_possible_routes_multifloor"]], "get_best_possible_routes_same_floor() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.get_best_possible_routes_same_floor"]], "get_corresponding_space_by_name() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.get_corresponding_space_by_name"]], "get_corresponding_vertical_space() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.get_corresponding_vertical_space"]], "get_route() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.get_route"]], "get_valid_multifloor_exit_nodes() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.get_valid_multifloor_exit_nodes"]], "get_valid_single_floor_exit_nodes() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.get_valid_single_floor_exit_nodes"]], "is_edge_matching_direction() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.is_edge_matching_direction"]], "load_floor_navnet() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.load_floor_navnet"]], "load_floor_oneway_net() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.load_floor_oneway_net"]], "load_hallway_graph() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.load_hallway_graph"]], "remove_unnecessary_coords() (in module citam.engine.facility.navigation)": [[18, "citam.engine.facility.navigation.remove_unnecessary_coords"]], "set_policy_for_aisle() (citam.engine.facility.navigation.navigation method)": [[18, "citam.engine.facility.navigation.Navigation.set_policy_for_aisle"]], "unroll_route() (in module citam.engine.facility.navigation)": [[18, "citam.engine.facility.navigation.unroll_route"]], "log (in module citam.engine)": [[19, "citam.engine.LOG"]], "citam.engine": [[19, "module-citam.engine"]], "engine_run() (in module citam.engine)": [[19, "citam.engine.engine_run"]], "parse_input_file() (in module citam.engine)": [[19, "citam.engine.parse_input_file"]], "run_simulation() (in module citam.engine)": [[19, "citam.engine.run_simulation"]], "citam.engine.io": [[20, "module-citam.engine.io"]], "invalidsvgerror": [[21, "citam.engine.io.input_parser.InvalidSVGError"]], "log (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser.LOG"]], "missinginputerror": [[21, "citam.engine.io.input_parser.MissingInputError"]], "unable_to_read_file_str (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser.UNABLE_TO_READ_FILE_STR"]], "_extract_doors() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser._extract_doors"]], "_extract_space_metadata() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser._extract_space_metadata"]], "_extract_spaces() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser._extract_spaces"]], "_load_buildings_data() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser._load_buildings_data"]], "_process_row() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser._process_row"]], "check_for_required_values() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser.check_for_required_values"]], "citam.engine.io.input_parser": [[21, "module-citam.engine.io.input_parser"]], "extract_buildings_elem() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser.extract_buildings_elem"]], "parse_csv_metadata_file() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser.parse_csv_metadata_file"]], "parse_input_file() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser.parse_input_file"]], "parse_meetings_policy_file() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser.parse_meetings_policy_file"]], "parse_office_assignment_file() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser.parse_office_assignment_file"]], "parse_scheduling_policy_file() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser.parse_scheduling_policy_file"]], "parse_standalone_svg_floorplan_file() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser.parse_standalone_svg_floorplan_file"]], "parse_svg_floorplan_file() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser.parse_svg_floorplan_file"]], "validate_input_values() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser.validate_input_values"]], "validate_shifts() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser.validate_shifts"]], "validate_traffic_policy() (in module citam.engine.io.input_parser)": [[21, "citam.engine.io.input_parser.validate_traffic_policy"]], "_serializer (class in citam.engine.io.serializer)": [[22, "citam.engine.io.serializer._Serializer"]], "__call__() (citam.engine.io.serializer._serializer method)": [[22, "citam.engine.io.serializer._Serializer.__call__"]], "citam.engine.io.serializer": [[22, "module-citam.engine.io.serializer"]], "decoder_hook() (citam.engine.io.serializer._serializer method)": [[22, "citam.engine.io.serializer._Serializer.decoder_hook"]], "encoder_default() (citam.engine.io.serializer._serializer method)": [[22, "citam.engine.io.serializer._Serializer.encoder_default"]], "serializer (in module citam.engine.io.serializer)": [[22, "citam.engine.io.serializer.serializer"]], "citam.engine.io.storage_utils": [[23, "module-citam.engine.io.storage_utils"]], "create_floor_datadir() (in module citam.engine.io.storage_utils)": [[23, "citam.engine.io.storage_utils.create_floor_datadir"]], "get_facility_datadir() (in module citam.engine.io.storage_utils)": [[23, "citam.engine.io.storage_utils.get_facility_datadir"]], "get_floor_datadir() (in module citam.engine.io.storage_utils)": [[23, "citam.engine.io.storage_utils.get_floor_datadir"]], "get_floorplans_directory() (in module citam.engine.io.storage_utils)": [[23, "citam.engine.io.storage_utils.get_floorplans_directory"]], "get_user_cache() (in module citam.engine.io.storage_utils)": [[23, "citam.engine.io.storage_utils.get_user_cache"]], "line_marker (in module citam.engine.io.visualization)": [[24, "citam.engine.io.visualization.LINE_MARKER"]], "log (in module citam.engine.io.visualization)": [[24, "citam.engine.io.visualization.LOG"]], "plus_marker (in module citam.engine.io.visualization)": [[24, "citam.engine.io.visualization.PLUS_MARKER"]], "x_marker (in module citam.engine.io.visualization)": [[24, "citam.engine.io.visualization.X_MARKER"]], "add_root_layer_to_svg() (in module citam.engine.io.visualization)": [[24, "citam.engine.io.visualization.add_root_layer_to_svg"]], "citam.engine.io.visualization": [[24, "module-citam.engine.io.visualization"]], "create_arrow_svg_paths() (in module citam.engine.io.visualization)": [[24, "citam.engine.io.visualization.create_arrow_svg_paths"]], "create_markers_svg_paths() (in module citam.engine.io.visualization)": [[24, "citam.engine.io.visualization.create_markers_svg_paths"]], "export_nav_network_to_svg() (in module citam.engine.io.visualization)": [[24, "citam.engine.io.visualization.export_nav_network_to_svg"]], "export_possible_oneway_aisles_to_svg() (in module citam.engine.io.visualization)": [[24, "citam.engine.io.visualization.export_possible_oneway_aisles_to_svg"]], "export_world_to_svg() (in module citam.engine.io.visualization)": [[24, "citam.engine.io.visualization.export_world_to_svg"]], "log (in module citam.engine.main)": [[25, "citam.engine.main.LOG"]], "routes_json_file (in module citam.engine.main)": [[25, "citam.engine.main.ROUTES_JSON_FILE"]], "build_navigation_network() (in module citam.engine.main)": [[25, "citam.engine.main.build_navigation_network"]], "check_and_remove_node_from_oneway_network() (in module citam.engine.main)": [[25, "citam.engine.main.check_and_remove_node_from_oneway_network"]], "citam.engine.main": [[25, "module-citam.engine.main"]], "compute_occupancy_rate() (in module citam.engine.main)": [[25, "citam.engine.main.compute_occupancy_rate"]], "export_floorplan_to_svg() (in module citam.engine.main)": [[25, "citam.engine.main.export_floorplan_to_svg"]], "export_navigation_graph_to_svg() (in module citam.engine.main)": [[25, "citam.engine.main.export_navigation_graph_to_svg"]], "find_and_save_potential_one_way_aisles() (in module citam.engine.main)": [[25, "citam.engine.main.find_and_save_potential_one_way_aisles"]], "ingest_floorplan() (in module citam.engine.main)": [[25, "citam.engine.main.ingest_floorplan"]], "initialize_oneway_network() (in module citam.engine.main)": [[25, "citam.engine.main.initialize_oneway_network"]], "list_facilities() (in module citam.engine.main)": [[25, "citam.engine.main.list_facilities"]], "load_floorplans() (in module citam.engine.main)": [[25, "citam.engine.main.load_floorplans"]], "run_simulation() (in module citam.engine.main)": [[25, "citam.engine.main.run_simulation"]], "show_floorplan() (in module citam.engine.main)": [[25, "citam.engine.main.show_floorplan"]], "update_floorplan_from_svg_file() (in module citam.engine.main)": [[25, "citam.engine.main.update_floorplan_from_svg_file"]], "door (class in citam.engine.map.door)": [[26, "citam.engine.map.door.Door"]], "__eq__() (citam.engine.map.door.door method)": [[26, "citam.engine.map.door.Door.__eq__"]], "__hash__() (citam.engine.map.door.door method)": [[26, "citam.engine.map.door.Door.__hash__"]], "__str__() (citam.engine.map.door.door method)": [[26, "citam.engine.map.door.Door.__str__"]], "_as_dict() (citam.engine.map.door.door method)": [[26, "citam.engine.map.door.Door._as_dict"]], "_intersect_coords (citam.engine.map.door.door attribute)": [[26, "citam.engine.map.door.Door._intersect_coords"]], "citam.engine.map.door": [[26, "module-citam.engine.map.door"]], "intersect_coords (citam.engine.map.door.door property)": [[26, "citam.engine.map.door.Door.intersect_coords"]], "is_intersect_and_midpoint_same() (citam.engine.map.door.door method)": [[26, "citam.engine.map.door.Door.is_intersect_and_midpoint_same"]], "midpoint (citam.engine.map.door.door property)": [[26, "citam.engine.map.door.Door.midpoint"]], "midpoint_coords (citam.engine.map.door.door property)": [[26, "citam.engine.map.door.Door.midpoint_coords"]], "floorplan (class in citam.engine.map.floorplan)": [[27, "citam.engine.map.floorplan.Floorplan"]], "log (in module citam.engine.map.floorplan)": [[27, "citam.engine.map.floorplan.LOG"]], "_as_dict() (citam.engine.map.floorplan.floorplan method)": [[27, "citam.engine.map.floorplan.Floorplan._as_dict"]], "citam.engine.map.floorplan": [[27, "module-citam.engine.map.floorplan"]], "export_to_svg() (citam.engine.map.floorplan.floorplan method)": [[27, "citam.engine.map.floorplan.Floorplan.export_to_svg"]], "find_space_by_id() (citam.engine.map.floorplan.floorplan method)": [[27, "citam.engine.map.floorplan.Floorplan.find_space_by_id"]], "floorplan_from_directory() (in module citam.engine.map.floorplan)": [[27, "citam.engine.map.floorplan.floorplan_from_directory"]], "get_room_exit_coords() (citam.engine.map.floorplan.floorplan method)": [[27, "citam.engine.map.floorplan.Floorplan.get_room_exit_coords"]], "identify_this_location() (citam.engine.map.floorplan.floorplan method)": [[27, "citam.engine.map.floorplan.Floorplan.identify_this_location"]], "match_doors_and_spaces() (citam.engine.map.floorplan.floorplan method)": [[27, "citam.engine.map.floorplan.Floorplan.match_doors_and_spaces"]], "move_agent() (citam.engine.map.floorplan.floorplan method)": [[27, "citam.engine.map.floorplan.Floorplan.move_agent"]], "place_agent() (citam.engine.map.floorplan.floorplan method)": [[27, "citam.engine.map.floorplan.Floorplan.place_agent"]], "remove_agent() (citam.engine.map.floorplan.floorplan method)": [[27, "citam.engine.map.floorplan.Floorplan.remove_agent"]], "show() (citam.engine.map.floorplan.floorplan method)": [[27, "citam.engine.map.floorplan.Floorplan.show"]], "show_summary() (citam.engine.map.floorplan.floorplan method)": [[27, "citam.engine.map.floorplan.Floorplan.show_summary"]], "to_json_file() (citam.engine.map.floorplan.floorplan method)": [[27, "citam.engine.map.floorplan.Floorplan.to_json_file"]], "_compute_key_vectors() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry._compute_key_vectors"]], "align_to_reference() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.align_to_reference"]], "calculate_distance_between_walls() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.calculate_distance_between_walls"]], "calculate_dot_product_and_distance_between_walls() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.calculate_dot_product_and_distance_between_walls"]], "calculate_dot_product_between_walls() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.calculate_dot_product_between_walls"]], "calculate_normal_vector_between_walls() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.calculate_normal_vector_between_walls"]], "calculate_perpendicular_vector (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.calculate_perpendicular_vector"]], "calculate_x_and_y_overlap() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.calculate_x_and_y_overlap"]], "citam.engine.map.geometry": [[28, "module-citam.engine.map.geometry"]], "compute_new_door_line() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.compute_new_door_line"]], "create_parallel_line() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.create_parallel_line"]], "determine_orientation() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.determine_orientation"]], "do_intersect() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.do_intersect"]], "do_lines_intersect_at_endpoint() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.do_lines_intersect_at_endpoint"]], "find_door_line() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.find_door_line"]], "is_one_segment_within_the_other() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.is_one_segment_within_the_other"]], "is_point_on_line() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.is_point_on_line"]], "on_segment() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.on_segment"]], "remove_segment_from_wall() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.remove_segment_from_wall"]], "round_coords() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.round_coords"]], "sample_random_points_from_line() (in module citam.engine.map.geometry)": [[28, "citam.engine.map.geometry.sample_random_points_from_line"]], "citam.engine.map": [[29, "module-citam.engine.map"]], "floorplaningester (class in citam.engine.map.ingester)": [[30, "citam.engine.map.ingester.FloorplanIngester"]], "log (in module citam.engine.map.ingester)": [[30, "citam.engine.map.ingester.LOG"]], "_create_door_object() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester._create_door_object"]], "_find_all_overlapping_walls() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester._find_all_overlapping_walls"]], "_remove_door_from_overlapping_walls() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester._remove_door_from_overlapping_walls"]], "build_door_line() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.build_door_line"]], "check_for_overlap_with_other_walls() (in module citam.engine.map.ingester)": [[30, "citam.engine.map.ingester.check_for_overlap_with_other_walls"]], "check_for_overlap_with_other_walls_and_add_door_to_wall() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.check_for_overlap_with_other_walls_and_add_door_to_wall"]], "citam.engine.map.ingester": [[30, "module-citam.engine.map.ingester"]], "create_new_door_to_room() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.create_new_door_to_room"]], "create_spaces_from_csv_and_svg_data() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.create_spaces_from_csv_and_svg_data"]], "create_spaces_from_svg_data() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.create_spaces_from_svg_data"]], "find_and_remove_overlaps_between_walls() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.find_and_remove_overlaps_between_walls"]], "find_closest_wall_and_best_door_line() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.find_closest_wall_and_best_door_line"]], "find_invalid_walls() (in module citam.engine.map.ingester)": [[30, "citam.engine.map.ingester.find_invalid_walls"]], "find_min_and_max_coordinates() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.find_min_and_max_coordinates"]], "find_space_index_for_door() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.find_space_index_for_door"]], "find_valid_walls_and_create_doors() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.find_valid_walls_and_create_doors"]], "get_building_walls() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.get_building_walls"]], "get_floorplan() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.get_floorplan"]], "process_doors() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.process_doors"]], "read_data_from_csv_and_svg_files() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.read_data_from_csv_and_svg_files"]], "read_data_from_svg_file() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.read_data_from_svg_file"]], "read_input_files() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.read_input_files"]], "run() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.run"]], "validate_buildings() (citam.engine.map.ingester.floorplaningester method)": [[30, "citam.engine.map.ingester.FloorplanIngester.validate_buildings"]], "point (class in citam.engine.map.point)": [[31, "citam.engine.map.point.Point"]], "__eq__() (citam.engine.map.point.point method)": [[31, "citam.engine.map.point.Point.__eq__"]], "__str__() (citam.engine.map.point.point method)": [[31, "citam.engine.map.point.Point.__str__"]], "citam.engine.map.point": [[31, "module-citam.engine.map.point"]], "convert_to_cartesian() (citam.engine.map.point.point method)": [[31, "citam.engine.map.point.Point.convert_to_cartesian"]], "convert_to_complex() (citam.engine.map.point.point method)": [[31, "citam.engine.map.point.Point.convert_to_complex"]], "space (class in citam.engine.map.space)": [[32, "citam.engine.map.space.Space"]], "__eq__() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.__eq__"]], "__hash__() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.__hash__"]], "__str__() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.__str__"]], "_as_dict() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space._as_dict"]], "citam.engine.map.space": [[32, "module-citam.engine.map.space"]], "get_random_internal_point() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.get_random_internal_point"]], "get_space_coords() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.get_space_coords"]], "infinite_line_intersection_test() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.infinite_line_intersection_test"]], "is_point_inside_space() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.is_point_inside_space"]], "is_point_on_space_boundaries() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.is_point_on_space_boundaries"]], "is_point_on_space_walls() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.is_point_on_space_walls"]], "is_space_a_cafeteria() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.is_space_a_cafeteria"]], "is_space_a_hallway() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.is_space_a_hallway"]], "is_space_a_lab() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.is_space_a_lab"]], "is_space_a_meeting_room() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.is_space_a_meeting_room"]], "is_space_a_restroom() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.is_space_a_restroom"]], "is_space_an_office() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.is_space_an_office"]], "is_space_vertical() (citam.engine.map.space.space method)": [[32, "citam.engine.map.space.Space.is_space_vertical"]], "floorplanupdater (class in citam.engine.map.updater)": [[33, "citam.engine.map.updater.FloorplanUpdater"]], "log (in module citam.engine.map.updater)": [[33, "citam.engine.map.updater.LOG"]], "citam.engine.map.updater": [[33, "module-citam.engine.map.updater"]], "find_doors_to_remove() (citam.engine.map.updater.floorplanupdater method)": [[33, "citam.engine.map.updater.FloorplanUpdater.find_doors_to_remove"]], "find_spaces_for_door() (citam.engine.map.updater.floorplanupdater method)": [[33, "citam.engine.map.updater.FloorplanUpdater.find_spaces_for_door"]], "find_spaces_of_point() (citam.engine.map.updater.floorplanupdater method)": [[33, "citam.engine.map.updater.FloorplanUpdater.find_spaces_of_point"]], "find_special_walls() (citam.engine.map.updater.floorplanupdater method)": [[33, "citam.engine.map.updater.FloorplanUpdater.find_special_walls"]], "overlap_door_with_wall() (citam.engine.map.updater.floorplanupdater method)": [[33, "citam.engine.map.updater.FloorplanUpdater.overlap_door_with_wall"]], "process_new_doors() (citam.engine.map.updater.floorplanupdater method)": [[33, "citam.engine.map.updater.FloorplanUpdater.process_new_doors"]], "read_updated_svg_file() (citam.engine.map.updater.floorplanupdater method)": [[33, "citam.engine.map.updater.FloorplanUpdater.read_updated_svg_file"]], "remove_door_from_spaces() (citam.engine.map.updater.floorplanupdater method)": [[33, "citam.engine.map.updater.FloorplanUpdater.remove_door_from_spaces"]], "run() (citam.engine.map.updater.floorplanupdater method)": [[33, "citam.engine.map.updater.FloorplanUpdater.run"]], "update_from_csv_data() (citam.engine.map.updater.floorplanupdater method)": [[33, "citam.engine.map.updater.FloorplanUpdater.update_from_csv_data"]], "update_from_svg_data() (citam.engine.map.updater.floorplanupdater method)": [[33, "citam.engine.map.updater.FloorplanUpdater.update_from_svg_data"]], "check_for_collinearity() (in module citam.engine.map.utils)": [[34, "citam.engine.map.utils.check_for_collinearity"]], "citam.engine.map.utils": [[34, "module-citam.engine.map.utils"]], "compute_bounding_box() (in module citam.engine.map.utils)": [[34, "citam.engine.map.utils.compute_bounding_box"]], "do_walls_overlap() (in module citam.engine.map.utils)": [[34, "citam.engine.map.utils.do_walls_overlap"]], "extract_end_points() (in module citam.engine.map.utils)": [[34, "citam.engine.map.utils.extract_end_points"]], "find_aisles() (in module citam.engine.map.utils)": [[34, "citam.engine.map.utils.find_aisles"]], "find_closest_parallel_wall() (in module citam.engine.map.utils)": [[34, "citam.engine.map.utils.find_closest_parallel_wall"]], "generate_closed_path_for_aisle() (in module citam.engine.map.utils)": [[34, "citam.engine.map.utils.generate_closed_path_for_aisle"]], "get_aisle_center_point_and_width() (in module citam.engine.map.utils)": [[34, "citam.engine.map.utils.get_aisle_center_point_and_width"]], "is_this_an_aisle() (in module citam.engine.map.utils)": [[34, "citam.engine.map.utils.is_this_an_aisle"]], "is_this_wall_part_of_an_aisle() (in module citam.engine.map.utils)": [[34, "citam.engine.map.utils.is_this_wall_part_of_an_aisle"]], "is_wall_valid_for_aisle() (in module citam.engine.map.utils)": [[34, "citam.engine.map.utils.is_wall_valid_for_aisle"]], "citam.engine.schedulers.employee_scheduler": [[35, "module-citam.engine.schedulers.employee_scheduler"]], "citam.engine.schedulers": [[36, "module-citam.engine.schedulers"]], "log (in module citam.engine.schedulers.meetings)": [[37, "citam.engine.schedulers.meetings.LOG"]], "meeting (class in citam.engine.schedulers.meetings)": [[37, "citam.engine.schedulers.meetings.Meeting"]], "meetingschedule (class in citam.engine.schedulers.meetings)": [[37, "citam.engine.schedulers.meetings.MeetingSchedule"]], "__eq__() (citam.engine.schedulers.meetings.meeting method)": [[37, "citam.engine.schedulers.meetings.Meeting.__eq__"]], "__str__() (citam.engine.schedulers.meetings.meeting method)": [[37, "citam.engine.schedulers.meetings.Meeting.__str__"]], "_create_meetings_for_room() (citam.engine.schedulers.meetings.meetingschedule method)": [[37, "citam.engine.schedulers.meetings.MeetingSchedule._create_meetings_for_room"]], "_find_potential_attendees() (citam.engine.schedulers.meetings.meetingschedule method)": [[37, "citam.engine.schedulers.meetings.MeetingSchedule._find_potential_attendees"]], "_generate_meeting_attendee_list() (citam.engine.schedulers.meetings.meetingschedule method)": [[37, "citam.engine.schedulers.meetings.MeetingSchedule._generate_meeting_attendee_list"]], "_update_attendee_pool() (citam.engine.schedulers.meetings.meetingschedule method)": [[37, "citam.engine.schedulers.meetings.MeetingSchedule._update_attendee_pool"]], "build() (citam.engine.schedulers.meetings.meetingschedule method)": [[37, "citam.engine.schedulers.meetings.MeetingSchedule.build"]], "citam.engine.schedulers.meetings": [[37, "module-citam.engine.schedulers.meetings"]], "create_new_meeting() (citam.engine.schedulers.meetings.meetingschedule method)": [[37, "citam.engine.schedulers.meetings.MeetingSchedule.create_new_meeting"]], "get_daily_meetings() (citam.engine.schedulers.meetings.meetingschedule method)": [[37, "citam.engine.schedulers.meetings.MeetingSchedule.get_daily_meetings"]], "log (in module citam.engine.schedulers.office_schedule)": [[38, "citam.engine.schedulers.office_schedule.LOG"]], "officeschedule (class in citam.engine.schedulers.office_schedule)": [[38, "citam.engine.schedulers.office_schedule.OfficeSchedule"]], "__str__() (citam.engine.schedulers.office_schedule.officeschedule method)": [[38, "citam.engine.schedulers.office_schedule.OfficeSchedule.__str__"]], "build() (citam.engine.schedulers.office_schedule.officeschedule method)": [[38, "citam.engine.schedulers.office_schedule.OfficeSchedule.build"]], "build_schedule_item() (citam.engine.schedulers.office_schedule.officeschedule method)": [[38, "citam.engine.schedulers.office_schedule.OfficeSchedule.build_schedule_item"]], "choose_valid_scheduling_purpose() (citam.engine.schedulers.office_schedule.officeschedule method)": [[38, "citam.engine.schedulers.office_schedule.OfficeSchedule.choose_valid_scheduling_purpose"]], "citam.engine.schedulers.office_schedule": [[38, "module-citam.engine.schedulers.office_schedule"]], "count_purpose_occurence_in_schedule_items() (citam.engine.schedulers.office_schedule.officeschedule method)": [[38, "citam.engine.schedulers.office_schedule.OfficeSchedule.count_purpose_occurence_in_schedule_items"]], "find_next_schedule_item() (citam.engine.schedulers.office_schedule.officeschedule method)": [[38, "citam.engine.schedulers.office_schedule.OfficeSchedule.find_next_schedule_item"]], "find_possible_purposes() (citam.engine.schedulers.office_schedule.officeschedule method)": [[38, "citam.engine.schedulers.office_schedule.OfficeSchedule.find_possible_purposes"]], "get_max_duration_for_purpose() (citam.engine.schedulers.office_schedule.officeschedule method)": [[38, "citam.engine.schedulers.office_schedule.OfficeSchedule.get_max_duration_for_purpose"]], "get_next_position() (citam.engine.schedulers.office_schedule.officeschedule method)": [[38, "citam.engine.schedulers.office_schedule.OfficeSchedule.get_next_position"]], "get_pace() (citam.engine.schedulers.office_schedule.officeschedule method)": [[38, "citam.engine.schedulers.office_schedule.OfficeSchedule.get_pace"]], "get_valid_purposes_from_possible_purposes() (citam.engine.schedulers.office_schedule.officeschedule method)": [[38, "citam.engine.schedulers.office_schedule.OfficeSchedule.get_valid_purposes_from_possible_purposes"]], "update_itinerary() (citam.engine.schedulers.office_schedule.officeschedule method)": [[38, "citam.engine.schedulers.office_schedule.OfficeSchedule.update_itinerary"]], "update_schedule_items() (citam.engine.schedulers.office_schedule.officeschedule method)": [[38, "citam.engine.schedulers.office_schedule.OfficeSchedule.update_schedule_items"]], "log (in module citam.engine.schedulers.office_scheduler)": [[39, "citam.engine.schedulers.office_scheduler.LOG"]], "officescheduler (class in citam.engine.schedulers.office_scheduler)": [[39, "citam.engine.schedulers.office_scheduler.OfficeScheduler"]], "assign_office() (citam.engine.schedulers.office_scheduler.officescheduler method)": [[39, "citam.engine.schedulers.office_scheduler.OfficeScheduler.assign_office"]], "citam.engine.schedulers.office_scheduler": [[39, "module-citam.engine.schedulers.office_scheduler"]], "generate_meetings() (citam.engine.schedulers.office_scheduler.officescheduler method)": [[39, "citam.engine.schedulers.office_scheduler.OfficeScheduler.generate_meetings"]], "run() (citam.engine.schedulers.office_scheduler.officescheduler method)": [[39, "citam.engine.schedulers.office_scheduler.OfficeScheduler.run"]], "save_to_files() (citam.engine.schedulers.office_scheduler.officescheduler method)": [[39, "citam.engine.schedulers.office_scheduler.OfficeScheduler.save_to_files"]], "schedule (class in citam.engine.schedulers.schedule)": [[40, "citam.engine.schedulers.schedule.Schedule"]], "scheduleitem (class in citam.engine.schedulers.schedule)": [[40, "citam.engine.schedulers.schedule.ScheduleItem"]], "build() (citam.engine.schedulers.schedule.schedule method)": [[40, "citam.engine.schedulers.schedule.Schedule.build"]], "citam.engine.schedulers.schedule": [[40, "module-citam.engine.schedulers.schedule"]], "scheduler (class in citam.engine.schedulers.scheduler)": [[41, "citam.engine.schedulers.scheduler.Scheduler"]], "citam.engine.schedulers.scheduler": [[41, "module-citam.engine.schedulers.scheduler"]], "run() (citam.engine.schedulers.scheduler.scheduler method)": [[41, "citam.engine.schedulers.scheduler.Scheduler.run"]], "save_to_files() (citam.engine.schedulers.scheduler.scheduler method)": [[41, "citam.engine.schedulers.scheduler.Scheduler.save_to_files"]], "citam": [[42, "module-citam"]], "settings (in module citam)": [[42, "citam.settings"]], "closecontactscalculator (class in close_contacts_calculator)": [[43, "close_contacts_calculator.CloseContactsCalculator"]], "add_contact_event() (close_contacts_calculator.closecontactscalculator method)": [[43, "close_contacts_calculator.CloseContactsCalculator.add_contact_event"]], "close_contacts_calculator": [[43, "module-close_contacts_calculator"]], "create_svg_heatmap() (close_contacts_calculator.closecontactscalculator method)": [[43, "close_contacts_calculator.CloseContactsCalculator.create_svg_heatmap"]], "extract_contact_distribution_per_agent() (close_contacts_calculator.closecontactscalculator method)": [[43, "close_contacts_calculator.CloseContactsCalculator.extract_contact_distribution_per_agent"]], "finalize() (close_contacts_calculator.closecontactscalculator method)": [[43, "close_contacts_calculator.CloseContactsCalculator.finalize"]], "identify_xy_proximity() (close_contacts_calculator.closecontactscalculator method)": [[43, "close_contacts_calculator.CloseContactsCalculator.identify_xy_proximity"]], "initialize() (close_contacts_calculator.closecontactscalculator method)": [[43, "close_contacts_calculator.CloseContactsCalculator.initialize"]], "run() (close_contacts_calculator.closecontactscalculator method)": [[43, "close_contacts_calculator.CloseContactsCalculator.run"]], "save_to_files() (close_contacts_calculator.closecontactscalculator method)": [[43, "close_contacts_calculator.CloseContactsCalculator.save_to_files"]], "verify_and_add_contact() (close_contacts_calculator.closecontactscalculator method)": [[43, "close_contacts_calculator.CloseContactsCalculator.verify_and_add_contact"]], "contactevent (class in contacts)": [[44, "contacts.ContactEvent"]], "contactevents (class in contacts)": [[44, "contacts.ContactEvents"]], "add_contact() (contacts.contactevents method)": [[44, "contacts.ContactEvents.add_contact"]], "contacts": [[44, "module-contacts"]], "count() (contacts.contactevents method)": [[44, "contacts.ContactEvents.count"]], "extract_statistics() (contacts.contactevents method)": [[44, "contacts.ContactEvents.extract_statistics"]], "get_contacts_per_coordinates() (contacts.contactevents method)": [[44, "contacts.ContactEvents.get_contacts_per_coordinates"]], "get_floor_contact_coords() (contacts.contactevents method)": [[44, "contacts.ContactEvents.get_floor_contact_coords"]], "save_pairwise_contacts() (contacts.contactevents method)": [[44, "contacts.ContactEvents.save_pairwise_contacts"]], "save_raw_contact_data() (contacts.contactevents method)": [[44, "contacts.ContactEvents.save_raw_contact_data"]], "update_data_dictionary() (in module contacts)": [[44, "contacts.update_data_dictionary"]]}})